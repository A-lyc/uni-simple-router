/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/decode-uri-component/index.js":
/*!****************************************************!*\
  !*** ./node_modules/decode-uri-component/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n\n\n//# sourceURL=webpack:///./node_modules/decode-uri-component/index.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/query-string/index.js":
/*!********************************************!*\
  !*** ./node_modules/query-string/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nconst strictUriEncode = __webpack_require__(/*! strict-uri-encode */ \"./node_modules/strict-uri-encode/index.js\");\nconst decodeComponent = __webpack_require__(/*! decode-uri-component */ \"./node_modules/decode-uri-component/index.js\");\nconst splitOnFirst = __webpack_require__(/*! split-on-first */ \"./node_modules/split-on-first/index.js\");\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.split('').indexOf(options.arrayFormatSeparator) > -1;\n\t\t\t\tconst newValue = isArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof input !== 'string') {\n\t\treturn ret;\n\t}\n\n\tinput = input.trim().replace(/^[?#&]/, '');\n\n\tif (!input) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of input.split('&')) {\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (input, options) => {\n\treturn {\n\t\turl: removeHash(input).split('?')[0] || '',\n\t\tquery: parse(extract(input), options)\n\t};\n};\n\nexports.stringifyUrl = (input, options) => {\n\tconst url = removeHash(input.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(input.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl);\n\tconst hash = getHash(input.url);\n\tconst query = Object.assign(parsedQueryFromUrl, input.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\n\n//# sourceURL=webpack:///./node_modules/query-string/index.js?");

/***/ }),

/***/ "./node_modules/split-on-first/index.js":
/*!**********************************************!*\
  !*** ./node_modules/split-on-first/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n\n\n//# sourceURL=webpack:///./node_modules/split-on-first/index.js?");

/***/ }),

/***/ "./node_modules/strict-uri-encode/index.js":
/*!*************************************************!*\
  !*** ./node_modules/strict-uri-encode/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\n\n//# sourceURL=webpack:///./node_modules/strict-uri-encode/index.js?");

/***/ }),

/***/ "./src/appRouter/hooks.js":
/*!********************************!*\
  !*** ./src/appRouter/hooks.js ***!
  \********************************/
/*! exports provided: proxyLaunchHook, proxyIndexHook, beforeBackHooks, backApiCallHook, transitionTo, triggerLifeCycle, beforeTabHooks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"proxyLaunchHook\", function() { return proxyLaunchHook; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"proxyIndexHook\", function() { return proxyIndexHook; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"beforeBackHooks\", function() { return beforeBackHooks; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"backApiCallHook\", function() { return backApiCallHook; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transitionTo\", function() { return transitionTo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"triggerLifeCycle\", function() { return triggerLifeCycle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"beforeTabHooks\", function() { return beforeTabHooks; });\n/* harmony import */ var _helpers_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/config */ \"./src/helpers/config.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ \"./src/appRouter/util.js\");\n/* harmony import */ var _helpers_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/util */ \"./src/helpers/util.js\");\n/* harmony import */ var _helpers_warn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/warn */ \"./src/helpers/warn.js\");\n/* harmony import */ var _uniNav__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./uniNav */ \"./src/appRouter/uniNav.js\");\n\n\n\n\n\n\nlet startBack = false;\t// 主要是兼容低端手机返回卡 然后多次返回直接提示退出的问题\n\n/**\n * 还原并执行所有 拦截下来的生命周期 app.vue 及 index 下的生命周期\n * @param {Boolean} callHome // 是否触发首页的生命周期\n *\n * this 为当前 page 对象\n */\nconst callwaitHooks = function (callHome) {\n    return new Promise(async (resolve) => {\n        const variation = [];\t// 存储一下在uni-app上的变异生命钩子  奇葩的要死\n        const {\n            appVue, indexVue, onLaunch, onShow, waitHooks, variationFuns, indexCallHooks,\n        } = _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"];\n        const app = appVue.$options;\n        await onLaunch.fun[onLaunch.fun.length - 1].call(appVue, onLaunch.args);\t// 确保只执行最后一个 并且强化异步操作\n        onShow.fun[onShow.fun.length - 1].call(appVue, onShow.args);\t// onshow 不保证异步 直接确保执行最后一个\n        if (callHome) {\t// 触发首页生命周期\n            // eslint-disable-next-line\n            for (const key in waitHooks) {\n                if (indexCallHooks.includes(key)) {\t// 只有在被包含的情况下才执行\n                    _util__WEBPACK_IMPORTED_MODULE_1__[\"callAppHook\"].call(this, waitHooks[key].fun);\n                }\n            }\n        }\n        if (onLaunch.isHijack) {\t// 还原 onLaunch生命钩子\n            app.onLaunch.splice(app.onLaunch.length - 1, 1, onLaunch.fun[0]);\n        }\n        if (onShow.isHijack) {\t// 继续还原 onShow\n            app.onShow.splice(app.onShow.length - 1, 1, onShow.fun[0]);\n        }\n        // eslint-disable-next-line\n        for (const key in waitHooks) {\t// 还原 首页下的生命钩子\n            const item = waitHooks[key];\n            if (item.isHijack) {\n                if (variationFuns.includes(key)) {\t// 变异方法\n                    variation.push({ key, fun: item.fun[0] });\n                } else {\n                    const indeHooks = indexVue[key];\n                    // 修复 https://github.com/SilurianYang/uni-simple-router/issues/76\n                    setTimeout(() => {\t// 异步延迟还原 不然 uni-app 给给触发了\n                        indeHooks.splice(indeHooks.length - 1, 1, item.fun[0]);\n                    }, 50);\n                }\n            }\n        }\n        resolve(variation);\n    });\n};\n/**\n * 还原剩下的奇葩生命钩子\n * @param {Object} variation 当前uni-app中的一些变异方法  奇葩生命钩子\n */\nconst callVariationHooks = function (variation) {\n    for (let i = 0; i < variation.length; i += 1) {\n        const { key, fun } = variation[i];\n        const indeHooks = _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].indexVue[key];\n        indeHooks.splice(indeHooks.length - 1, 1, fun);\n    }\n};\n\n/**\n * 主要是对app.vue下onLaunch和onShow生命周期进行劫持\n *\n * this 为当前 page 对象\n */\nconst proxyLaunchHook = function () {\n    const {\n        onLaunch,\n        onShow,\n    } = this.$options;\n    _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].appVue = this;\t\t// 缓存 当前app.vue组件对象\n    if (onLaunch.length > 1) {\t// 确保有写 onLaunch 可能有其他混入 那也办法\n        _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].onLaunch.isHijack = true;\n        _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].onLaunch.fun = onLaunch.splice(onLaunch.length - 1, 1, (arg) => {\n            _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].onLaunch.args = arg;\n        });\t\t// 替换uni-app自带的生命周期\n    }\n    if (onShow.length > 0) {\n        _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].onShow.isHijack = true;\n        _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].onShow.fun = onShow.splice(onShow.length - 1, 1, (arg) => {\n            _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].onShow.args = arg;\n            if (_helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].pageReady) {\t\t// 因为还有app切前台后台的操作\n                _util__WEBPACK_IMPORTED_MODULE_1__[\"callAppHook\"].call(this, _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].onShow.fun, arg);\n            }\n        });\t// 替换替换 都替换\n    }\n};\n\n/**\n * 把指定页面的生命钩子函数保存并替换\n * this 为当前 page 对象\n */\nconst proxyIndexHook = function (Router) {\n    const { needHooks, waitHooks } = _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"];\n    const options = this.$options;\n    _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].indexVue = options;\n    for (let i = 0; i < needHooks.length; i += 1) {\n        const key = needHooks[i];\n        if (options[key] != null) {\t// 只劫持开发者声明的生命周期\n            const { length } = options[key];\n            // eslint-disable-next-line\n            const whObject= waitHooks[key]={};\n            whObject.fun = options[key].splice(length - 1, 1, _helpers_util__WEBPACK_IMPORTED_MODULE_2__[\"noop\"]);\t// 把实际的页面生命钩子函数缓存起来,替换原有的生命钩子\n            whObject.isHijack = true;\n        }\n    }\n    // eslint-disable-next-line\n    triggerLifeCycle.call(this, Router);\t// 接着 主动我们触发导航守卫\n};\n/**\n * 触发全局beforeHooks 生命钩子\n * @param {Object} _from // from  参数\n * @param {Object} _to  // to 参数\n *\n * this 为当前 Router 对象\n */\nconst beforeHooks = function (_from, _to) {\n    return new Promise(async (resolve) => {\n        const beforeHooksFun = this.lifeCycle.beforeHooks[0];\n        if (beforeHooksFun == null) {\n            return resolve();\n        }\n        await beforeHooksFun.call(this, _to, _from, resolve);\n    });\n};\n/**\n * 触发全局afterEachHooks 生命钩子\n * @param {Object} _from // from  参数\n * @param {Object} _to  // to 参数\n *\n * this 为当前 Router 对象\n */\nconst afterEachHooks = function (_from, _to) {\n    const afterHooks = this.lifeCycle.afterHooks[0];\n    if (afterHooks != null && afterHooks.constructor === Function) {\n        afterHooks.call(this, _to, _from);\n    }\n};\n/**\n * 触发全局 beforeEnter 生命钩子\n * @param {Object} finalRoute \t// 当前格式化后的路由参数\n * @param {Object} _from // from  参数\n * @param {Object} _to  // to 参数\n *\n * this 为当前 Router 对象\n */\nconst beforeEnterHooks = function (finalRoute, _from, _to) {\n    return new Promise(async (resolve) => {\n        const { beforeEnter } = finalRoute.route;\n        if (beforeEnter == null || beforeEnter.constructor !== Function) {\t// 当前这个beforeEnter不存在 或者类型错误\n            return resolve();\n        }\n        await beforeEnter.call(this, _to, _from, resolve);\n    });\n};\n/**\n * 触发返回事件公共方法\n * @param {Object} page\t用getPages获取到的页面栈对象\n * @param {Object} options \t当前vue页面对象\n * @param {Object} backLayerC\t需要返回页面的层级\n   *\n * this 为当前 Router 对象\n */\nconst backCallHook = function (page, options, backLayerC = 1) {\n    const route = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"APPGetPageRoute\"])([page]);\n    const NAVTYPE = 'RouterBack';\n    // eslint-disable-next-line\n    transitionTo.call(this, { path: route.path, query: route.query }, NAVTYPE, (finalRoute, fnType) => {\n        if (fnType != NAVTYPE) { // 返回时的api如果有next到其他页面 那么必须带上NAVTYPE  不相同则表示需要跳转到其他页面\n            return Object(_uniNav__WEBPACK_IMPORTED_MODULE_4__[\"uniPushTo\"])(finalRoute, fnType);\n        }\n        if (startBack) { // 如果当前处于正在返回的状态\n            return Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_3__[\"warn\"])('当前处于正在返回的状态，请稍后再试！');\n        }\n        startBack = true;\t// 标记开始返回\n        options.onBackPress = [_helpers_util__WEBPACK_IMPORTED_MODULE_2__[\"noop\"]];\t// 改回uni-app可执行的状态\n        setTimeout(() => {\n            this.back(backLayerC, undefined, true); // 越过加锁验证\n            startBack = false;\t// 返回结束\n        });\n    });\n};\n/**\n * 处理返回按钮的生命钩子\n * @param {Object} options 当前 vue 组件对象下的$options对象\n * @param {Array} args  当前页面是点击头部返回还是底部返回\n *\n * this 为当前 Router 对象\n */\nconst beforeBackHooks = async function (options, args) {\n    const isNext = await Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getPageOnBeforeBack\"])(args); // 执行onBeforeBack\n    if (isNext === false) { // onBeforeBack  返回了true 阻止了跳转\n        _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"Global\"].LockStatus = false; // 也需要解锁\n        return false;\n    }\n    const page = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getPages\"])(-3);\t// 上一个页面对象\n    backCallHook.call(this, page, options);\n};\n/**\n * 处理back api的生命钩子\n * @param {Object} options 当前 vue 组件对象下的$options对象\n * @param {Array} args  当前页面是点击头部返回还是底部返回\n *\n * this 为当前 Router 对象\n */\nconst backApiCallHook = async function (options, args) {\n    await Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getPageOnBeforeBack\"])(args);\n    const { backLayerC } = _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"Global\"];\n    const pages = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getPages\"])();\n    let page = null;\n    if (backLayerC > pages.length - 1 || backLayerC == pages.length - 1) {\t// 返回的首页 我们需要显示tabbar拦截\n        // eslint-disable-next-line\n        page = pages[0];\n    } else {\n        page = pages[pages.length - 2];\n    }\n    backCallHook.call(this, page, options, backLayerC);\n};\n/**\n *  v1.5.4+\n * beforeRouteLeave 生命周期\n * @param {Object} to       将要去的那个页面 to对象\n * @param {Object} from     从那个页面触发的 from对象\n *  @param {Boolean} leaveHook:? 是否为 beforeRouteLeave 触发的next 到别处 如果是则不再触发 beforeRouteLeave 生命钩子\n * this 为当前 Router 对象\n */\nconst beforeRouteLeaveHooks = function (from, to, leaveHook) {\n    return new Promise((resolve) => {\n        if (leaveHook) { // 我们知道这个是来自页面beforeRouteLeave next到其他地方，所有不必再执行啦\n            Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_3__[\"warn\"])('beforeRouteLeave next到其他地方，无须再执行！');\n            return resolve();\n        }\n        if (from.path == to.path) { // 进入首页的时候不触发\n            return resolve();\n        }\n        const currentPage = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getPages\"])(-2); // 获取到全部的页面对象\n        const callThis = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getPageVmOrMp\"])(currentPage); // 获取到页面的 $vm 对象 及 page页面的this对象\n        const { beforeRouteLeave } = callThis.$options; // 查看当前是否有开发者声明\n        if (beforeRouteLeave == null) {\n            Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_3__[\"warn\"])('当前页面下无 beforeRouteLeave 钩子声明，无须执行！');\n            return resolve();\n        }\n        if (beforeRouteLeave != null && beforeRouteLeave.constructor !== Function) {\n            Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_3__[\"warn\"])('beforeRouteLeave 生命钩子声明错误，必须是一个函数！');\n            return resolve();\n        }\n        beforeRouteLeave.call(callThis, to, from, resolve); // 执行生命钩子\n    });\n};\n\n/**\n * 验证当前 next() 管道函数是否支持下一步\n *\n * @param {Object} Intercept 拦截到的新路由规则\n * @param {Object} fnType 跳转页面的类型方法 原始的\n * @param {Object} navCB 回调函数 原始的\n * @param {Boolean} leaveHookCall:? 是否为 beforeRouteLeave 触发的next 做拦截判断\n * this 为当前 Router 对象\n *\n */\nconst isNext = function (Intercept, fnType, navCB, leaveHookCall = false) {\n    return new Promise((resolve, reject) => {\n        if (Intercept == null) {\t\t// 什么也不做 直接执行下一个钩子\n            return resolve();\n        }\n        if (Intercept === false) {\t\t// 路由中断\n            _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"Global\"].LockStatus = false; // 解锁跳转状态\n            return reject('路由终止');\n        }\n        if (Intercept.constructor === String) {\t\t// 说明 开发者直接传的path 并且没有指定 NAVTYPE 那么采用原来的navType\n            reject('next到其他页面');\n            // eslint-disable-next-line\n            return transitionTo.call(this, Intercept, fnType, navCB,leaveHookCall);\n        }\n        if (Intercept.constructor === Object) {\t// 有一系列的配置 包括页面切换动画什么的\n            reject('next到其他页面');\n            // eslint-disable-next-line\n            return transitionTo.call(this, Intercept, Intercept.NAVTYPE || fnType, navCB,leaveHookCall);\n        }\n    });\n};\n/**\n * 核心方法 处理一系列的跳转配置\n * @param {Object} rule 当前跳转规则\n * @param {Object} fnType 跳转页面的类型方法\n * @param {Object} navCB:? 回调函数\n * @param {Boolean} leaveHook:? 是否为 beforeRouteLeave 触发的next 到别处 如果是则不再触发 beforeRouteLeave 生命钩子\n *\n * this 为当前 Router 对象\n */\nconst transitionTo = async function (rule, fnType, navCB, leaveHook = false) {\n    await this.lifeCycle.routerbeforeHooks[0].call(this); // 触发内部跳转前的生命周期\n    const finalRoute = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"ruleToUniNavInfo\"])(rule, this.CONFIG.routes);\t\t// 获得到最终的 route 对象\n    const _from = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"formatFrom\"])(this.CONFIG.routes);\t// 先根据跳转类型获取 from 数据\n    const _to = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"formatTo\"])(finalRoute);\t// 再根据跳转类型获取 to 数据\n    try {\n        const leaveResult = await beforeRouteLeaveHooks.call(this, _from, _to, leaveHook); // 执行页面中的 beforeRouteLeave 生命周期 v1.5.4+\n        await isNext.call(this, leaveResult, fnType, navCB, true);\t// 验证当前是否继续  可能需要递归  那么 我们把参数传递过去\n\n        const beforeResult = await beforeHooks.call(this, _from, _to);\t\t// 执行 beforeEach 生命周期\n        await isNext.call(this, beforeResult, fnType, navCB);\t// 验证当前是否继续  可能需要递归  那么 我们把参数传递过去\n\n        const enterResult = await beforeEnterHooks.call(this, finalRoute, _from, _to);\t// 接着执行 beforeEnter 生命周期\n        await isNext.call(this, enterResult, fnType, navCB);\t// 再次验证  如果生命钩子多的话应该写成递归或者循环\n    } catch (e) {\n        Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_3__[\"warn\"])(e); // 打印开发者操作的日志\n        return false;\n    }\n    if (navCB) {\n        navCB.call(this, finalRoute, fnType);\t// 执行当前回调生命周期\n    }\n    afterEachHooks.call(this, _from, _to);\n    await this.lifeCycle.routerAfterHooks[0].call(this); // 触发内部跳转前的生命周期\n};\n/**\n * 主动触发导航守卫\n * @param {Object} Router 当前路由对象\n *\n * this  当前vue页面组件对象\n */\nconst triggerLifeCycle = function (Router) {\n    const topPage = getCurrentPages()[0];\n    if (topPage == null) {\n        return Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_3__[\"warn\"])('打扰了,当前一个页面也没有 这不是官方的bug是什么??');\n    }\n    const { query, page } = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getPageVmOrMp\"])(topPage, false);\n    transitionTo.call(Router, { path: page.route, query }, 'push', async (finalRoute, fnType) => {\n        let variation = [];\n        if (`/${page.route}` == finalRoute.route.path) {\t\t// 在首页不动的情况下\n            _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].pageReady = true;\t\t// 标致着路由已经就绪 可能准备起飞\n            await callwaitHooks.call(this, true);\n        } else {\t// 需要跳转\n            variation = await callwaitHooks.call(this, false);\t// 只触发app.vue中的生命周期\n            await Object(_uniNav__WEBPACK_IMPORTED_MODULE_4__[\"uniPushTo\"])(finalRoute, fnType);\n        }\n        plus.nativeObj.View.getViewById('router-loadding').close();\n        callVariationHooks(variation);\n        _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].pageReady = true;\t\t// 标致着路由已经就绪 可能准备起飞\n    });\n};\n\n/**\n * 处理tabbar点击拦截事件\n * @param {Object} path 当前需要跳转的tab页面路径\n *\n * this 为当前 Router 对象\n */\nconst beforeTabHooks = function (path) {\n    transitionTo.call(this, { path: `/${path}`, query: {} }, 'pushTab', (finalRoute, fnType) => {\n        Object(_uniNav__WEBPACK_IMPORTED_MODULE_4__[\"uniPushTo\"])(finalRoute, fnType);\n    });\n};\n\n\n//# sourceURL=webpack:///./src/appRouter/hooks.js?");

/***/ }),

/***/ "./src/appRouter/init.js":
/*!*******************************!*\
  !*** ./src/appRouter/init.js ***!
  \*******************************/
/*! exports provided: rewriteUniFun, registerLoddingPage, removeBackPressEvent, pageIsHeadBack, appInit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rewriteUniFun\", function() { return rewriteUniFun; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"registerLoddingPage\", function() { return registerLoddingPage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeBackPressEvent\", function() { return removeBackPressEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pageIsHeadBack\", function() { return pageIsHeadBack; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"appInit\", function() { return appInit; });\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hooks */ \"./src/appRouter/hooks.js\");\n/* harmony import */ var _helpers_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/config */ \"./src/helpers/config.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ \"./src/appRouter/util.js\");\n/* harmony import */ var _helpers_warn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/warn */ \"./src/helpers/warn.js\");\n\n\n\n\n\n/**\n * 重写掉uni-app的 uni.getLocation 和 uni.chooseLocation APi\n * @param {Object} Router  当前路由对象\n */\nconst rewriteUniFun = function (Router) {\n    const oldSwitchTab = uni.switchTab; // 缓存 跳转到 tabBar 页面\n    uni.switchTab = function ({ url, ...args }, normal = false) {\n        if (normal === true || _helpers_config__WEBPACK_IMPORTED_MODULE_1__[\"uniAppHook\"].pageReady === false) { // 调用原始的uni-app  api\n            oldSwitchTab({\n                url,\n                ...args,\n            });\n        } else {\n            if (_helpers_config__WEBPACK_IMPORTED_MODULE_1__[\"uniAppHook\"].pageReady) { // 只有在路由守卫等  处理完所有操作后才能触发\n                const { path } = Router.$Route; // 获取当前路径\n                if (path == url) { // 路径相同不执行\n                    return Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_3__[\"warn\"])(`当前跳转路径：${url}  已在本页面无须跳转`);\n                }\n                _hooks__WEBPACK_IMPORTED_MODULE_0__[\"beforeTabHooks\"].call(Router, url.substring(1)); // 不要 /\n            } else {\n                Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_3__[\"warn\"])('路由守卫正在忙碌中 不允许执行 ‘uni.switchTab’');\n            }\n        }\n    };\n};\n\n/**\n * 对当前app做一个动画页面 用来过渡首次next 等待时间过长的尴尬\n * @param {Object} Router 当前路由对象\n */\nconst registerLoddingPage = function (Router) {\n    const { loddingPageHook, loddingPageStyle } = Router.CONFIG.APP;\t// 获取app所有配置\n    const view = new plus.nativeObj.View('router-loadding', {\n        top: '0px',\n        left: '0px',\n        height: '100%',\n        width: '100%',\n        ...loddingPageStyle.call(Router),\n    });\n    loddingPageHook.call(Router, view);\t// 触发等待页面生命周期\n};\n/**\n * 移除当前 页面上 非router 声明的 onBackPress 事件\n * @param {Object} page 当前 vue 组件对象\n * @param {Object} options\t当前page对象的 $options\n * 修复 https://github.com/SilurianYang/uni-simple-router/issues/106\n */\nconst removeBackPressEvent = function (page, options) {\n    const isBack = Object(_util__WEBPACK_IMPORTED_MODULE_2__[\"assertCanBack\"])(page);\n    if (isBack) {\t// 可返回\n        options.onBackPress = [options.onBackPress[0]];\t\t// 路由混入的都干掉\n    }\n};\n/**\n * 判断当前页面是否需要拦截返回\n *\n * @param {Object} page 当前 vue 组件对象\n * @param {Object} options 当前 vue 组件对象下的$options对象\n * @param {Array} args  当前页面是点击头部返回还是底部返回\n * 修复 https://github.com/SilurianYang/uni-simple-router/issues/66\n *\n * this 为当前 Router 对象\n */\nconst pageIsHeadBack = function (page, options, args) {\n    if (args[0].from == 'navigateBack') {\t\t// 调用api返回\n        if (_helpers_config__WEBPACK_IMPORTED_MODULE_1__[\"Global\"].LockStatus) { // 正在跳转的时候 返回按键按的太快啦\n            Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_3__[\"warn\"])('当前页面正在处于跳转状态，请稍后再进行跳转....');\n            return true;\n        }\n        _helpers_config__WEBPACK_IMPORTED_MODULE_1__[\"Global\"].LockStatus = true; // 设置为锁住状态\n        _hooks__WEBPACK_IMPORTED_MODULE_0__[\"backApiCallHook\"].call(this, options, args);\n        return true;\n    }\n    const isBack = Object(_util__WEBPACK_IMPORTED_MODULE_2__[\"assertCanBack\"])(page);\n    if (isBack) {\t// 可返回\n        if (_helpers_config__WEBPACK_IMPORTED_MODULE_1__[\"Global\"].LockStatus) { // 正在跳转的时候 返回按键按的太快啦\n            Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_3__[\"warn\"])('当前页面正在处于跳转状态，请稍后再进行跳转....');\n            return true;\n        }\n        _helpers_config__WEBPACK_IMPORTED_MODULE_1__[\"Global\"].LockStatus = true; // 设置为锁住状态\n        _hooks__WEBPACK_IMPORTED_MODULE_0__[\"beforeBackHooks\"].call(this, options, args);\n        return true;\n    }\n    return false;\n};\n\n/**\n * 开始初始化app端路由配置\n *\n * @param {Object} Router\n *\n * this 为当前 page 对象\n */\nconst appInit = function (Router) {\n    _hooks__WEBPACK_IMPORTED_MODULE_0__[\"proxyLaunchHook\"].call(this);\n    const { holdTabbar } = Router.CONFIG.APP;\n    if (holdTabbar) { // 开启tab拦截时\n        rewriteUniFun(Router);\n    }\n    registerLoddingPage(Router);\n};\n\n\n//# sourceURL=webpack:///./src/appRouter/init.js?");

/***/ }),

/***/ "./src/appRouter/uniNav.js":
/*!*********************************!*\
  !*** ./src/appRouter/uniNav.js ***!
  \*********************************/
/*! exports provided: uniPushTo, rewriteUniApi */
/***/ (function(module, exports) {

eval("throw new Error(\"Module parse failed: Unexpected token (43:4)\\nFile was processed with these loaders:\\n * ./node_modules/eslint-loader/dist/cjs.js\\nYou may need an additional loader to handle the result of these loaders.\\n| const rewriteUniApi = function (uniMethods) {\\n|     const methods\\n>     for(let name in uniMethods){\\n|         this.rewritedMethods[name]=\\n|         uni[name]=function(param){\");\n\n//# sourceURL=webpack:///./src/appRouter/uniNav.js?");

/***/ }),

/***/ "./src/appRouter/util.js":
/*!*******************************!*\
  !*** ./src/appRouter/util.js ***!
  \*******************************/
/*! exports provided: callAppHook, getPages, isNvuePage, getPageVmOrMp, formatTo, pathOrNameToRoute, getFormatQuery, formatFrom, ruleToUniNavInfo, APPGetPageRoute, getPageOnBeforeBack, assertCanBack */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"callAppHook\", function() { return callAppHook; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPages\", function() { return getPages; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNvuePage\", function() { return isNvuePage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPageVmOrMp\", function() { return getPageVmOrMp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatTo\", function() { return formatTo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pathOrNameToRoute\", function() { return pathOrNameToRoute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFormatQuery\", function() { return getFormatQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatFrom\", function() { return formatFrom; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ruleToUniNavInfo\", function() { return ruleToUniNavInfo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"APPGetPageRoute\", function() { return APPGetPageRoute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPageOnBeforeBack\", function() { return getPageOnBeforeBack; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"assertCanBack\", function() { return assertCanBack; });\n/* harmony import */ var _helpers_warn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/warn */ \"./src/helpers/warn.js\");\n/* harmony import */ var _helpers_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/util */ \"./src/helpers/util.js\");\n/* harmony import */ var _helpers_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/config */ \"./src/helpers/config.js\");\n\n\n\n\n/**\n * 触发指定生命钩子\n * @param {Array} funList\t//需要执行的方法列表\n * @param {Object} args //触发生命钩子传递的参数\n */\nconst callAppHook = function (funList = [], args) {\n    for (let i = 0; i < funList.length; i += 1) {\n        funList[i].call(this, args);\n    }\n};\n/**\n * @param {Number} index //需要获取的页面下标 -2:表示获取最后一个即当前页面 -1:表示全部 -3:当前页面的前一个页面\n * @param {Boolean} all //是否获取全部的页面\n */\nconst getPages = function (index = -1, all) {\n    const pages = getCurrentPages(all);\n    if (index === -1) {\n        return pages;\n    }\n    if (index === -2) {\n        return pages[pages.length - 1];\n    }\n    if (index === -3) {\n        return pages[pages.length - 2];\n    }\n    return pages[index];\n};\n/**\n * 验证当前页面是否为nvue页面\n * @param {Object} page 当前页面对象\n */\nconst isNvuePage = function (page) {\n    const cstr = page.constructor.name;\n    const pageType = {\n        s: true,\n        z: false,\n    };\n    return pageType[cstr];\n};\n\n/**\n * @param {Object} page //当前顶级页面对象\n * @param {Object} vim:? //是否获取 $vm 对象还是 $mp 对象\n */\nconst getPageVmOrMp = function (page, vim = true) {\n    if (vim) {\n        return page.$vm;\n    }\n    if (page.$vm.$mp) {\n        return page.$vm.$mp;\n    }\n    if (isNvuePage(page)) {\t// nvue 页面\n        return {\n            page,\n            query: page.__displayReporter.query,\n        };\n    }\n};\n\n/**\n * 获取 to 的配置参数\n * @param {Object} rule 当前跳转的规则\n */\nconst formatTo = function (finalRoute) {\n    const route = Object(_helpers_util__WEBPACK_IMPORTED_MODULE_1__[\"copyObject\"])(finalRoute.route);\n    const { rule } = finalRoute;\n    route.query = rule.query || rule.params || {};\n    return route;\n};\n/**\n * 通过一个未知的路径或者名称 在路由表中查找指定路由表 并返回\n * @param {string} type   //path 或者 name\n * @param {Object} routes //当前对象的所有路由表\n */\nconst pathOrNameToRoute = function (type, routes = _helpers_config__WEBPACK_IMPORTED_MODULE_2__[\"Global\"].Router.CONFIG.routes) {\n    const routesKeys = Object.keys(routes);\n    for (let i = 0; i < routesKeys.length; i += 1) {\n        const key = routesKeys[i];\n        const item = routes[key];\n        if (item.path === `/${type}`) {\n            return Object(_helpers_config__WEBPACK_IMPORTED_MODULE_2__[\"route\"])(item); // 合并一下对象,主要是合并 query:{} 及 params:{}\n        }\n        if (item.path === type) {\n            return Object(_helpers_config__WEBPACK_IMPORTED_MODULE_2__[\"route\"])(item); // 合并一下对象,主要是合并 query:{} 及 params:{}\n        }\n        if (item.name == type) {\n            return Object(_helpers_config__WEBPACK_IMPORTED_MODULE_2__[\"route\"])(item); // 合并一下对象,主要是合并 query:{} 及 params:{}\n        }\n    }\n    Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_0__[\"err\"])(`当前 '${type}' 在路由表中没有找到匹配的 name 或者 path`);\n};\n/**\n * 统一格式话 路由传递的参数 看看是编码还是非编码 做相应的对策\n *\n * @param {Object} query 当前的路由参数\n * @param {Boolean} getter 是从页面获取 route 对象下的参数 还是编码后传输\n */\nconst getFormatQuery = function (query = {}) {\n    if (_helpers_config__WEBPACK_IMPORTED_MODULE_2__[\"Global\"].Router.CONFIG.encodeURI) {\n        try {\n            query = JSON.parse(decodeURIComponent(query.query || encodeURIComponent('{}')));\n        } catch (e) {\n            query = JSON.parse(query.query);\n        }\n    }\n    return query;\n};\n/**\n * 获取 from 的配置参数 from 页面永远都是站在当前页面忘其它地方走 所以都是最后一个页面\n *\n * @param {Object} routes //当前对象的所有路由表\n */\nconst formatFrom = function (routes) {\n    const topPage = getPages(-2);\n    const { page, query } = getPageVmOrMp(topPage, false);\n    const route = pathOrNameToRoute(page.route, routes);\t// 获取到当前路由表下的 route\n    route.query = getFormatQuery(query);\t// 不管是编码传输还是非编码 最后都得在 to/from 中换成json对象\n    return route;\n};\n/**\n *\n * 把用户的跳转路由规则格式化成uni-app可用的路由跳转规则\n *\n * @param {Object} rule  //当前用户跳转的路由规则\n * @param {Object} routes //当前simple-router 下的路由表\n */\nconst ruleToUniNavInfo = function (rule, routes) {\n    if (rule == null) {\n        return Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_0__[\"err\"])('当前跳转规则为空,请检查跳转代码');\n    }\n    // eslint-disable-next-line\n    let [navType, route, query, animation] = ['path', null, {}, {}];\r\n    if (rule.constructor === String) {\t\t// 是字符串类型 那当前就是路径啦\n        route = pathOrNameToRoute(rule, routes);\t// 直接把 rule 当 path 传递 完事\n    } else if (rule.constructor === Object) {\t\t// 对象类型 可以是 path 或者 name\n        route = pathOrNameToRoute(rule.path || (navType = 'name', rule.name), routes);\t// 两则必有其一 报错自己处理\n        query = rule.query || rule.params || {};\n        animation = rule.animation || {};\n    } else {\n        return Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_0__[\"err\"])('传的什么乱七八糟的类型?路由跳转规则只认字符串 \\'path\\' , 对象 \\'path\\' , 对象 \\'name\\' ');\n    }\n    animation = { ..._helpers_config__WEBPACK_IMPORTED_MODULE_2__[\"Global\"].Router.CONFIG.APP.animation, ...route.animation || {}, ...animation };\t// 合并多种方式声明的动画效果\n    route.animation = animation;\t// 这才是最终的页面切换效果\n    // 路径处理完后   开始格式化参数\n    const uniRoute = Object(_helpers_util__WEBPACK_IMPORTED_MODULE_1__[\"parseQuery\"])(route.path, query);\t// uni-app 需要的跳转规则\n    return {\n        rule,\n        route,\n        uniRoute,\n    };\n};\n/**\n * 获取当前页面下的 Route 信息\n *\n * @param {Object} pages 获取页面对象集合\n * @param {Object} Vim 用户传递的当前页面对象\n */\nconst APPGetPageRoute = function (pages, Vim) {\n    let [query, path] = [{}, ''];\n    const page = pages[pages.length - 1];\t// 获取到当前页面\n    if (pages.length > 0) {\n        query = getFormatQuery(page.options, true);\n        path = page.route;\n    } else if (Vim != null) {\n        query = getFormatQuery(Vim.$mp.page.options, true);\n        path = page.route;\n    }\n    const route = pathOrNameToRoute(path);\n    route.query = query;\n    return route;\n};\n/**\n * 获取当前页面下的 onBeforeBack 生命周期并执行\n *\n * @param {Object} args 当前返回页面时uni-app传递的参数\n */\nconst getPageOnBeforeBack = function (args) {\n    return new Promise(async (resolve) => {\n        const currPage = getPages(-2);\t// 获取到当前页面\n        const { onBeforeBack } = currPage.$vm.$options;\n        if (onBeforeBack != null && onBeforeBack.constructor === Function) {\n            const isNext = await onBeforeBack.call(currPage.$vm, args);\n            if (isNext === true) {\n                return resolve(false);\n            }\n        }\n        return resolve(true);\n    });\n};\n/**\n * 断言当前页面是否可返回上一级\n * @param {Object} page 当前页面webview对象\n */\nconst assertCanBack = function (page) {\n    const pageStyle = page.$getAppWebview().getStyle();\n    if (pageStyle.titleNView != null && pageStyle.titleNView.autoBackButton) {\t// 只有处理有带返回按钮的页面\n        return true;\n    }\n    // 两种情况 1.真的是顶级页面时  2.自定义头部\n    const { $page } = page;\n    if ($page && $page.meta.isQuit === false) {\t\t// 自定义头部 不是顶级页面\n        return true;\n    }\n    return false;\t// 不可返回 真的是顶级页面时 返回就直接退出app了\n};\n\n\n//# sourceURL=webpack:///./src/appRouter/util.js?");

/***/ }),

/***/ "./src/appletsRouter/appletsNav.js":
/*!*****************************************!*\
  !*** ./src/appletsRouter/appletsNav.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _helpers_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/config */ \"./src/helpers/config.js\");\n/* harmony import */ var _helpers_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/util */ \"./src/helpers/util.js\");\n\n\n\n\n\n/**\n * @param {Object} finalRoute 格式化后的路由跳转规则\n * @param {Object} NAVTYPE 需要调用的跳转方法\n */\nconst appletsUniPushTo = function (finalRoute, NAVTYPE) {\n    return new Promise((resolve) => {\n        const query = Object(_helpers_util__WEBPACK_IMPORTED_MODULE_1__[\"formatURLQuery\"])(`?${finalRoute.uniRoute.query}`);\n        const { url } = finalRoute.uniRoute;\n        uni[_helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"methods\"][NAVTYPE]]({\n            url: url + query,\n            complete: () => {\n                resolve(url);\n                _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"Global\"].LockStatus = false; // 跳转完成解锁状态\n            },\n        });\n    });\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (appletsUniPushTo);\n\n\n//# sourceURL=webpack:///./src/appletsRouter/appletsNav.js?");

/***/ }),

/***/ "./src/appletsRouter/hooks.js":
/*!************************************!*\
  !*** ./src/appletsRouter/hooks.js ***!
  \************************************/
/*! exports provided: proxyLaunchHook, appletsTransitionTo, backCallHook, triggerLifeCycle, appletsProxyIndexHook */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"proxyLaunchHook\", function() { return proxyLaunchHook; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"appletsTransitionTo\", function() { return appletsTransitionTo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"backCallHook\", function() { return backCallHook; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"triggerLifeCycle\", function() { return triggerLifeCycle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"appletsProxyIndexHook\", function() { return appletsProxyIndexHook; });\n/* harmony import */ var _helpers_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/config */ \"./src/helpers/config.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ \"./src/appletsRouter/util.js\");\n/* harmony import */ var _appletsNav__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./appletsNav */ \"./src/appletsRouter/appletsNav.js\");\n/* harmony import */ var _helpers_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/util */ \"./src/helpers/util.js\");\n/* harmony import */ var _helpers_warn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/warn */ \"./src/helpers/warn.js\");\n\n\n\n\n\n\n/**\n *\n * @param {String} key\n * @param {Function} hook 需要执行及还原的生命周期函数\n */\nconst toutiaoIndexHookCall = function (key, hook) {\n    const { indexVue } = _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"];\n    const indeHooks = indexVue[key];\n    indeHooks.splice(indeHooks.length - 1, 1, hook);\n};\n\n/**\n * 还原并执行所有 拦截下来的生命周期 app.vue 及 index 下的生命周期\n * @param {Boolean} callHome // 是否触发首页的生命周期\n *\n * this 为当前 page 对象\n */\nconst callwaitHooks = function (callHome) {\n    return new Promise(async (resolve) => {\n        const variation = [];\t// 存储一下在uni-app上的变异生命钩子  奇葩的要死\n        const {\n            appVue, onLaunch, onShow, waitHooks, variationFuns, indexCallHooks,\n        } = _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"];\n        const app = appVue.$options;\n        await onLaunch.fun[onLaunch.fun.length - 1].call(appVue, onLaunch.args);\t// 确保只执行最后一个 并且强化异步操作\n        onShow.fun[onShow.fun.length - 1].call(appVue, onShow.args);\t// onshow 不保证异步 直接确保执行最后一个\n        if (callHome) {\t// 触发首页生命周期\n            // eslint-disable-next-line\n            for (const key in waitHooks) {\r\n                if (indexCallHooks.includes(key)) {\t// 只有在被包含的情况下才执行\n                    _util__WEBPACK_IMPORTED_MODULE_1__[\"callAppHook\"].call(this, waitHooks[key].fun);\n                }\n            }\n        }\n        if (onLaunch.isHijack) {\t// 还原 onLaunch生命钩子\n            app.onLaunch.splice(app.onLaunch.length - 1, 1, onLaunch.fun[0]);\n        }\n        if (onShow.isHijack) {\t// 继续还原 onShow\n            app.onShow.splice(app.onShow.length - 1, 1, onShow.fun[0]);\n        }\n        // eslint-disable-next-line\n        for (const key in waitHooks) {\t// 还原 首页下的生命钩子\r\n            const item = waitHooks[key];\n            if (item.isHijack) {\n                if (variationFuns.includes(key)) {\t// 变异方法\n                    variation.push({ key, fun: item.fun[0] });\n                } else {\n                    toutiaoIndexHookCall(key, item.fun[0]);\n                }\n            }\n        }\n        resolve(variation);\n    });\n};\n/**\n * 还原剩下的奇葩生命钩子\n * @param {Object} variation 当前uni-app中的一些变异方法  奇葩生命钩子\n */\nconst callVariationHooks = function (variation) {\n    for (let i = 0; i < variation.length; i += 1) {\n        const { key, fun } = variation[i];\n        toutiaoIndexHookCall(key, fun);\n    }\n};\n\n/**\n * 主要是对app.vue下onLaunch和onShow生命周期进行劫持\n *\n * this 为当前 page 对象\n */\nconst proxyLaunchHook = function () {\n    const {\n        onLaunch,\n        onShow,\n    } = this.$options;\n    _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].appVue = this;\t\t// 缓存 当前app.vue组件对象\n    if (onLaunch.length > 1) {\t// 确保有写 onLaunch 可能有其他混入 那也办法\n        _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].onLaunch.isHijack = true;\n        _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].onLaunch.fun = onLaunch.splice(onLaunch.length - 1, 1, (arg) => {\n            _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].onLaunch.args = arg;\n        });\t\t// 替换uni-app自带的生命周期\n    }\n    if (onShow.length > 0) {\n        _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].onShow.isHijack = true;\n        _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].onShow.fun = onShow.splice(onShow.length - 1, 1, (arg) => {\n            _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].onShow.args = arg;\n            if (_helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].pageReady) {\t\t// 因为还有app切前台后台的操作\n                _util__WEBPACK_IMPORTED_MODULE_1__[\"callAppHook\"].call(this, _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].onShow.fun, arg);\n            }\n        });\t// 替换替换 都替换\n    }\n};\n/**\n * 触发全局beforeHooks 生命钩子\n * @param {Object} _from // from  参数\n * @param {Object} _to  // to 参数\n *\n * this 为当前 Router 对象\n */\nconst beforeHooks = function (_from, _to) {\n    return new Promise(async (resolve) => {\n        const beforeHooksFun = this.lifeCycle.beforeHooks[0];\n        if (beforeHooksFun == null) {\n            return resolve();\n        }\n        await beforeHooksFun.call(this, _to, _from, resolve);\n    });\n};\n/**\n * 触发全局afterEachHooks 生命钩子\n * @param {Object} _from // from  参数\n * @param {Object} _to  // to 参数\n *\n * this 为当前 Router 对象\n */\nconst afterEachHooks = function (_from, _to) {\n    const afterHooks = this.lifeCycle.afterHooks[0];\n    if (afterHooks != null && afterHooks.constructor === Function) {\n        afterHooks.call(this, _to, _from);\n    }\n};\n/**\n * 触发全局 beforeEnter 生命钩子\n * @param {Object} finalRoute \t// 当前格式化后的路由参数\n * @param {Object} _from // from  参数\n * @param {Object} _to  // to 参数\n *\n * this 为当前 Router 对象\n */\nconst beforeEnterHooks = function (finalRoute, _from, _to) {\n    return new Promise(async (resolve) => {\n        const { beforeEnter } = finalRoute.route;\n        if (beforeEnter == null || beforeEnter.constructor !== Function) {\t// 当前这个beforeEnter不存在 或者类型错误\n            return resolve();\n        }\n        await beforeEnter.call(this, _to, _from, resolve);\n    });\n};\n/**\n *  v1.5.4+\n * beforeRouteLeave 生命周期\n * @param {Object} to       将要去的那个页面 to对象\n * @param {Object} from     从那个页面触发的 from对象\n *  @param {Boolean} leaveHook:? 是否为 beforeRouteLeave 触发的next 到别处 如果是则不再触发 beforeRouteLeave 生命钩子\n * this 为当前 Router 对象\n */\nconst beforeRouteLeaveHooks = function (from, to, leaveHook) {\n    return new Promise(async (resolve) => {\n        if (leaveHook) { // 我们知道这个是来自页面beforeRouteLeave next到其他地方，所有不必再执行啦\n            Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_4__[\"warn\"])('beforeRouteLeave next到其他地方，无须再执行！');\n            return resolve();\n        }\n        if (from.path == to.path) { // 进入首页的时候不触发\n            return resolve();\n        }\n        const currentPage = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getPages\"])(-2); // 获取到全部的页面对象\n        const callThis = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getPageVmOrMp\"])(currentPage); // 获取到页面的 $vm 对象 及 page页面的this对象\n        const { beforeRouteLeave } = callThis.$options; // 查看当前是否有开发者声明\n        if (beforeRouteLeave == null) {\n            Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_4__[\"warn\"])('当前页面下无 beforeRouteLeave 钩子声明，无须执行！');\n            return resolve();\n        }\n        if (beforeRouteLeave != null && beforeRouteLeave.constructor !== Function) {\n            Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_4__[\"warn\"])('beforeRouteLeave 生命钩子声明错误，必须是一个函数！');\n            return resolve();\n        }\n        await beforeRouteLeave.call(callThis, to, from, resolve); // 执行生命钩子\n    });\n};\n\n/**\n * 核心方法 处理一系列的跳转配置\n * @param {Object} rule 当前跳转规则\n * @param {Object} fnType 跳转页面的类型方法\n * @param {Object} navCB:? 回调函数\n * @param {Boolean} leaveHook:? 是否为 beforeRouteLeave 触发的next 到别处 如果是则不再触发 beforeRouteLeave 生命钩子\n * this 为当前 Router 对象\n *\n */\nconst appletsTransitionTo = async function (rule, fnType, navCB, leaveHook = false) {\n    await this.lifeCycle.routerbeforeHooks[0].call(this); // 触发内部跳转前的生命周期\n    const finalRoute = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"ruleToUniNavInfo\"])(rule, this.CONFIG.routes);\t\t// 获得到最终的 route 对象\n    const _from = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"formatFrom\"])(this.CONFIG.routes);\t// 先根据跳转类型获取 from 数据\n    const _to = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"formatTo\"])(finalRoute);\t// 再根据跳转类型获取 to 数据\n    try {\n        const leaveResult = await beforeRouteLeaveHooks.call(this, _from, _to, leaveHook); // 执行页面中的 beforeRouteLeave 生命周期 v1.5.4+\n        // eslint-disable-next-line\n        await isNext.call(this, leaveResult, fnType, navCB,true);\t// 验证当前是否继续  可能需要递归  那么 我们把参数传递过去\r\n\n        const beforeResult = await beforeHooks.call(this, _from, _to);\t\t// 执行 beforeEach 生命周期\n        // eslint-disable-next-line\n        await isNext.call(this, beforeResult, fnType, navCB);\t// 验证当前是否继续  可能需要递归  那么 我们把参数传递过去\r\n\n        const enterResult = await beforeEnterHooks.call(this, finalRoute, _from, _to);\t// 接着执行 beforeEnter 生命周期\n        // eslint-disable-next-line\n        await isNext.call(this, enterResult, fnType, navCB);\t// 再次验证  如果生命钩子多的话应该写成递归或者循环\r\n    } catch (e) {\n        Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_4__[\"warn\"])(e); // 打印开发者操作的日志\n        return false;\n    }\n    if (navCB) {\n        navCB.call(this, finalRoute, fnType);\t// 执行当前回调生命周期\n    }\n    afterEachHooks.call(this, _from, _to);\n    await this.lifeCycle.routerAfterHooks[0].call(this); // 触发内部跳转前的生命周期\n};\n\n/**\n * 触发全局 返回事件\n * @param {Number} backLayer 需要返回的页面层级\n * @param {Function} next 正真的回调函数\n *\n * this 为当前 Router 对象\n */\nconst backCallHook = function (backLayer, next) {\n    const pages = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getPages\"])(); // 获取到全部的页面对象\n    const toPage = pages.reverse()[backLayer];\n    if (toPage == null) { // 没有匹配到的时候\n        return Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_4__[\"warn\"])('亲爱的开发者，你确定页面栈中有这么多历史记录给你返回？');\n    }\n    const { query, page } = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getPageVmOrMp\"])(toPage, false);\n    const beforeFntype = 'RouterBack';\n    appletsTransitionTo.call(this, { path: page.route, query }, beforeFntype, (finalRoute, fnType) => {\n        const toPath = finalRoute.uniRoute.url;\n        if (`/${page.route}` == toPath || page.route == toPath) { // 直接调用返回api\n            next();\n        } else { // 有拦截到其他页面时\n            if (fnType == beforeFntype) {\n                return Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_4__[\"warn\"])('调用返回api被拦截到其他页面需要指定合理的 ‘NAVTYPE’ ');\n            }\n            Object(_appletsNav__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(finalRoute, fnType);\n        }\n    });\n};\n\n/**\n * 主动触发导航守卫\n * @param {Object} Router 当前路由对象\n *\n */\nconst triggerLifeCycle = function (Router) {\n    const topPage = getCurrentPages()[0];\n    if (topPage == null) {\n        return Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_4__[\"warn\"])('打扰了,当前一个页面也没有 这不是官方的bug是什么??');\n    }\n    const { query, page } = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getPageVmOrMp\"])(topPage, false);\n    appletsTransitionTo.call(Router, { path: page.route, query }, 'push', async (finalRoute, fnType) => {\n        let variation = [];\n        if (`/${page.route}` == finalRoute.route.path || page.route == finalRoute.route.path) {\t\t// 在首页不动的情况下\n            _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].pageReady = true;\t\t// 标致着路由已经就绪 可能准备起飞\n            await callwaitHooks.call(this, true);\n        } else {\t// 需要跳转\n            variation = await callwaitHooks.call(this, false);\t// 只触发app.vue中的生命周期\n            await Object(_appletsNav__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(finalRoute, fnType);\n        }\n        _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].pageReady = true;\t\t// 标致着路由已经就绪 可能准备起飞\n        callVariationHooks(variation);\n    });\n};\n/**\n * 把指定页面的生命钩子函数保存并替换\n * this 为当前 page 对象\n */\nconst appletsProxyIndexHook = function (Router) {\n    if (process.env.VUE_APP_PLATFORM == 'mp-toutiao') { // 头条小程序首页生命周期由我们手动触发，缓存this\n        _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].toutiaoIndexThis = this;\n    }\n    const { needHooks, waitHooks } = _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"];\n    const options = this.$options;\n    _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].indexVue = options;\n    for (let i = 0; i < needHooks.length; i += 1) {\n        const key = needHooks[i];\n        if (options[key] != null) {\t// 只劫持开发者声明的生命周期\n            const { length } = options[key];\n            // eslint-disable-next-line\n            const whObject= waitHooks[key]={};\r\n            whObject.fun = options[key].splice(length - 1, 1, _helpers_util__WEBPACK_IMPORTED_MODULE_3__[\"noop\"]);\t// 把实际的页面生命钩子函数缓存起来,替换原有的生命钩子\n            whObject.isHijack = true;\n        }\n    }\n    triggerLifeCycle.call(this, Router);\t// 接着 主动我们触发导航守卫\n};\n/**\n * 验证当前 next() 管道函数是否支持下一步\n *\n * @param {Object} Intercept 拦截到的新路由规则\n * @param {Object} fnType 跳转页面的类型方法 原始的\n * @param {Object} navCB 回调函数 原始的\n * @param {Boolean} leaveHookCall:? 是否为 beforeRouteLeave 触发的next 做拦截判断\n * this 为当前 Router 对象\n *\n */\nconst isNext = function (Intercept, fnType, navCB, leaveHookCall = false) {\n    return new Promise((resolve, reject) => {\n        if (Intercept == null) {\t\t// 什么也不做 直接执行下一个钩子\n            return resolve();\n        }\n        if (Intercept === false) {\t\t// 路由中断 我们需要把防抖设置为false\n            _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"Global\"].LockStatus = false; // 解锁跳转状态\n            return reject('路由终止');\n        }\n        if (Intercept.constructor === String) {\t\t// 说明 开发者直接传的path 并且没有指定 NAVTYPE 那么采用原来的navType\n            reject('next到其他页面');\n            return appletsTransitionTo.call(this, Intercept, fnType, navCB, leaveHookCall);\n        }\n        if (Intercept.constructor === Object) {\t// 有一系列的配置 包括页面切换动画什么的\n            reject('next到其他页面');\n            return appletsTransitionTo.call(this, Intercept, Intercept.NAVTYPE || fnType, navCB, leaveHookCall);\n        }\n    });\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./src/appletsRouter/hooks.js?");

/***/ }),

/***/ "./src/appletsRouter/init.js":
/*!***********************************!*\
  !*** ./src/appletsRouter/init.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hooks */ \"./src/appletsRouter/hooks.js\");\n\n\n/**\n * 开始初始化app端路由配置\n *\n * @param {Object} Router \t当前Router对象\n *\n * this 为当前 page 对象\n */\nconst appletsInit = function () {\n    _hooks__WEBPACK_IMPORTED_MODULE_0__[\"proxyLaunchHook\"].call(this);\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (appletsInit);\n\n\n//# sourceURL=webpack:///./src/appletsRouter/init.js?");

/***/ }),

/***/ "./src/appletsRouter/util.js":
/*!***********************************!*\
  !*** ./src/appletsRouter/util.js ***!
  \***********************************/
/*! exports provided: callAppHook, getPageVmOrMp, getFormatQuery, getPages, pathOrNameToRoute, formatTo, formatFrom, ruleToUniNavInfo, AppletsPageRoute */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"callAppHook\", function() { return callAppHook; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPageVmOrMp\", function() { return getPageVmOrMp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFormatQuery\", function() { return getFormatQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPages\", function() { return getPages; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pathOrNameToRoute\", function() { return pathOrNameToRoute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatTo\", function() { return formatTo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatFrom\", function() { return formatFrom; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ruleToUniNavInfo\", function() { return ruleToUniNavInfo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AppletsPageRoute\", function() { return AppletsPageRoute; });\n/* harmony import */ var _helpers_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/config */ \"./src/helpers/config.js\");\n/* harmony import */ var _helpers_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/util */ \"./src/helpers/util.js\");\n/* harmony import */ var _helpers_warn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/warn */ \"./src/helpers/warn.js\");\n/* harmony import */ var _helpers_compile__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/compile */ \"./src/helpers/compile.js\");\n\n\n\n\n/**\n * 触发指定生命钩子\n * @param {Array} funList\t//需要执行的方法列表\n * @param {Object} args //触发生命钩子传递的参数\n */\nconst callAppHook = function (funList, args) {\n    for (let i = 0; i < funList.length; i += 1) {\n        funList[i].call(this, args);\n    }\n};\n/**\n * @param {Object} page //当前顶级页面对象\n * @param {Object} vim:? //是否获取 $vm 对象还是 $mp 对象\n */\nconst getPageVmOrMp = function (page, vim = true) {\n    if (vim) {\n        return page.$vm;\n    }\n    const { $mp } = page.$vm;\n    Object(_helpers_compile__WEBPACK_IMPORTED_MODULE_3__[\"baiduApple\"])(() => {\t// 百度小程序新增一个route属性\n        $mp.page.route = $mp.page.is;\n    });\n    Object(_helpers_compile__WEBPACK_IMPORTED_MODULE_3__[\"touTiao\"])(() => {\t// 头条小程序新增一个route属性\n        $mp.page.route = $mp.page.is;\n    });\n    return $mp;\n};\n/**\n * 统一格式话 路由传递的参数 看看是编码还是非编码 做相应的对策\n *\n * @param {Object} query 当前的路由参数\n * @param {Boolean} getter 是从页面获取 route 对象下的参数 还是编码后传输\n */\nconst getFormatQuery = function (query = {}, getter = false) {\n    if (_helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"Global\"].Router.CONFIG.encodeURI) {\n        if (getter) {\n            try {\t\t// 除去微信小程序都不需要 decodeURIComponent\n                query = JSON.parse(decodeURIComponent(query.query) || '{}');\n            } catch (e) {\t// 其他小程序\n                query = JSON.parse(query.query || '{}');\n            }\n        } else {\n            try {\n                query = JSON.parse(decodeURIComponent(query.query || encodeURIComponent('{}')));\n            } catch (e) {\n                query = JSON.parse(query.query);\n            }\n        }\n    }\n    return query;\n};\n/**\n * @param {Number} index //需要获取的页面下标 -2:表示获取最后一个即当前页面 -1:表示全部 -3:当前页面的前一个页面\n * @param {Boolean} all //是否获取全部的页面\n */\nconst getPages = function (index = -1, all) {\n    const pages = getCurrentPages(all);\n    if (index === -1) {\n        return pages;\n    }\n    if (index === -2) {\n        return pages[pages.length - 1];\n    }\n    if (index === -3) {\n        return pages[pages.length - 2];\n    }\n    return pages[index];\n};\n/**\n * 通过一个未知的路径或者名称 在路由表中查找指定路由表 并返回\n * @param {string} type   //path 或者 name\n * @param {Object} routes //当前对象的所有路由表\n */\nconst pathOrNameToRoute = function (type, routes = _helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"Global\"].Router.CONFIG.routes) {\n    const routesKeys = Object.keys(routes);\n    for (let i = 0; i < routesKeys.length; i += 1) {\n        const key = routesKeys[i];\n        const item = routes[key];\n        if (item.path === `/${type}`) {\n            return Object(_helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"route\"])(item); // 合并一下对象,主要是合并 query:{} 及 params:{}\n        }\n        if (item.path === type) {\n            return Object(_helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"route\"])(item); // 合并一下对象,主要是合并 query:{} 及 params:{}\n        }\n        if (item.name == type) {\n            return Object(_helpers_config__WEBPACK_IMPORTED_MODULE_0__[\"route\"])(item); // 合并一下对象,主要是合并 query:{} 及 params:{}\n        }\n    }\n    Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_2__[\"err\"])(`当前 '${type}' 在路由表中没有找到匹配的 name 或者 path`);\n};\n\n/**\n * 获取 to 的配置参数\n * @param {Object} rule 当前跳转的规则\n */\nconst formatTo = function (finalRoute) {\n    const route = Object(_helpers_util__WEBPACK_IMPORTED_MODULE_1__[\"copyObject\"])(finalRoute.route);\n    const { rule } = finalRoute;\n    route.query = rule.query || rule.params || {};\n    return route;\n};\n\n/**\n * 获取 from 的配置参数 from 页面永远都是站在当前页面忘其它地方走 所以都是最后一个页面\n *\n * @param {Object} routes //当前对象的所有路由表\n */\nconst formatFrom = function (routes) {\n    const topPage = getPages(-2);\n    const { page, query } = getPageVmOrMp(topPage, false);\n    const route = pathOrNameToRoute(page.route, routes);\t// 获取到当前路由表下的 route\n    route.query = getFormatQuery(query);\t// 不管是编码传输还是非编码 最后都得在 to/from 中换成json对象\n    return route;\n};\n\n/**\n *\n * 把用户的跳转路由规则格式化成uni-app可用的路由跳转规则\n *\n * @param {Object} rule  //当前用户跳转的路由规则\n * @param {Object} routes //当前simple-router 下的路由表\n */\nconst ruleToUniNavInfo = function (rule, routes) {\n    if (rule == null) {\n        return Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_2__[\"err\"])('当前跳转规则为空,请检查跳转代码');\n    }\n    // eslint-disable-next-line\n    let [navType, route, query] = ['path', null, {}];\n    if (rule.constructor === String) {\t\t// 是字符串类型 那当前就是路径啦\n        route = pathOrNameToRoute(rule, routes);\t// 直接把 rule 当 path 传递 完事\n    } else if (rule.constructor === Object) {\t\t// 对象类型 可以是 path 或者 name\n        route = pathOrNameToRoute(rule.path || (navType = 'name', rule.name), routes);\t// 两则必有其一 报错自己处理\n        query = rule.query || rule.params || {};\n    } else {\n        return Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_2__[\"err\"])('传的什么乱七八糟的类型?路由跳转规则只认字符串 \\'path\\' , 对象 \\'path\\' , 对象 \\'name\\' ');\n    }\n    // 路径处理完后   开始格式化参数\n    const uniRoute = Object(_helpers_util__WEBPACK_IMPORTED_MODULE_1__[\"parseQuery\"])(route.path, query);\t// uni-app 需要的跳转规则\n    return {\n        rule,\n        route,\n        uniRoute,\n    };\n};\n/**\n * 获取当前页面下的 Route 信息\n *\n * @param {Object} pages 获取页面对象集合\n * @param {Object} Vim 用户传递的当前页面对象\n */\nconst AppletsPageRoute = function (pages, Vim) {\n    let [query, path] = [{}, ''];\n    const page = pages[pages.length - 1];\t// 获取到当前页面\n    if (pages.length > 0) {\n        const uniQuery = getPageVmOrMp(page, false).query;\n        query = getFormatQuery(uniQuery, true);\n        path = page.route;\n    } else if (Vim != null) {\n        query = getFormatQuery(Vim.$mp.page.options, true);\n        path = page.route;\n    }\n    const route = pathOrNameToRoute(path);\n    route.query = query;\n    return route;\n};\n\n\n//# sourceURL=webpack:///./src/appletsRouter/util.js?");

/***/ }),

/***/ "./src/component/h5-dom.js":
/*!*********************************!*\
  !*** ./src/component/h5-dom.js ***!
  \*********************************/
/*! exports provided: DOM */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DOM\", function() { return DOM; });\nconst render = function (node) {\n    if (typeof node == 'string') { // 是一个文本节点\n        return document.createTextNode(node);\n    }\n    if (node instanceof HTMLElement) {\n        return node;\n    }\n    // eslint-disable-next-line\n    return createElement(node);\r\n};\n/**\n * 根据标签及属性创建一个dom\n */\nconst createElement = function ({\n    tag,\n    attrs,\n    children,\n} = {}) {\n    const $el = document.createElement(tag);\n    // eslint-disable-next-line\n    for (const [k, v] of Object.entries(attrs)) {\r\n        $el.setAttribute(k, v);\n    }\n    // eslint-disable-next-line\n    for (const item of children) {\r\n        $el.appendChild(render(item));\n    }\n    return $el;\n};\n\nconst html = createElement({\n    tag: 'div',\n    attrs: {\n        id: 'router-loadding',\n    },\n    children: [\n        createElement({\n            tag: 'div',\n            attrs: {\n                class: 'loadding',\n            },\n            children: [],\n        }),\n    ],\n});\n/* eslint-disable */\r\nconst style = createElement({\r\n    tag: 'style',\r\n    attrs: {\r\n        id: 'HHYANG_style',\r\n    },\r\n    children: [\r\n        `\r\n\t\tbody{padding:0;margin:0}#router-loadding{position:fixed;width:100%;height:3px;transition:all .05s;top:0;z-index:9999999999999999;}#router-loadding .loadding{position:fixed;top:0;height:3px;background-color:#47b14b;width:0;box-shadow:0 0 15px #4CAF50;transition:all .8s;border-top-right-radius:3px;border-bottom-right-radius:3px}\r\n\t\t`,\r\n    ],\r\n});\r\n\r\nconst script = createElement({\r\n    tag: 'script',\r\n    attrs: {\r\n        id: 'HHYANG_script',\r\n    },\r\n    children: [\r\n        `\r\n\t\tvar HHYANG_El=document.querySelector(\"#router-loadding .loadding\"),HHYANG_Pel=document.querySelector(\"#router-loadding\"),w=0,stop=null,WH=window.innerWidth,loop=function(){w=w>=WH-35?w+parseInt(5*Math.random()):w+parseInt(35*Math.random());HHYANG_El.style.cssText=\"width:\"+w+\"px\";w>=WH&&clearInterval(stop)};window.startLodding=function(a){a=void 0===a?500:a;HHYANG_Pel.style.cssText=\"display: block;\";HHYANG_El.style.cssText=\"transition: all 0.8s;\";w=0;clearInterval(stop);stop=setInterval(function(){loop()},a)};window.stopLodding=function(a){a=void 0===a?200:a;clearInterval(stop);HHYANG_El.style.cssText=\"width:\"+WH+\"px;transition: all \"+a/1E3+\"s;\";HHYANG_Pel.style.cssText=\"opacity: 0;transition: all \"+a/1E3+\"s;\";setTimeout(function(){HHYANG_Pel.style.cssText=\"display: none;\";HHYANG_El.style.cssText=\"width:0px\";w=0},a)};\r\n\t\t`,\r\n    ],\r\n});\r\nconst DOM = {\r\n    style,\r\n    html,\r\n    script,\r\n};\r\n/* eslint-enable */\n\n\n//# sourceURL=webpack:///./src/component/h5-dom.js?");

/***/ }),

/***/ "./src/helpers/compile.js":
/*!********************************!*\
  !*** ./src/helpers/compile.js ***!
  \********************************/
/*! exports provided: H5, APP, applets, notH5, baiduApple, touTiao, mp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"H5\", function() { return H5; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"APP\", function() { return APP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"applets\", function() { return applets; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"notH5\", function() { return notH5; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"baiduApple\", function() { return baiduApple; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"touTiao\", function() { return touTiao; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mp\", function() { return mp; });\nconst H5 = function (fn) {\n    // #ifdef H5\n    fn();\n    // #endif\n};\nconst APP = function (fn) {\n    // #ifdef APP-PLUS\n    fn();\n    // #endif\n};\nconst applets = function (fn) {\n    // #ifdef MP\n    fn();\n    // #endif\n};\nconst notH5 = function (fn) {\n    // #ifndef H5\n    fn();\n    // #endif\n};\nconst baiduApple = function (fn) {\n    // #ifdef MP-BAIDU\n    fn();\n    // #endif\n};\nconst touTiao = function (fn) {\n    // #ifdef MP-TOUTIAO\n    fn();\n    // #endif\n};\nconst mp = function (fn) {\n    // #ifdef MP\n    fn();\n    // #endif\n};\n\n\n//# sourceURL=webpack:///./src/helpers/compile.js?");

/***/ }),

/***/ "./src/helpers/config.js":
/*!*******************************!*\
  !*** ./src/helpers/config.js ***!
  \*******************************/
/*! exports provided: baseConfig, uniMethods, methods, H5FnTypeToggle, lifeCycle, Global, uniAppHook, route */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"baseConfig\", function() { return baseConfig; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"uniMethods\", function() { return uniMethods; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"methods\", function() { return methods; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"H5FnTypeToggle\", function() { return H5FnTypeToggle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lifeCycle\", function() { return lifeCycle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Global\", function() { return Global; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"uniAppHook\", function() { return uniAppHook; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"route\", function() { return route; });\n\nconst baseConfig = {\n    h5: {\n        rewriteFun: true,\t// 是否对uni-app reLaunch/navigateBack 两个方法重写 处理uni刷新直接返回到首页和触发路由守卫\n        paramsToQuery: false, // h5端上通过params传参时规则是vue-router 刷新会丢失 开启此开关将变成?连接的方式\n        loading: true, // 是否显示加载动画\n        hinderTab: false, // 是否拦截uni-app自带底部菜单   TODO\n        vueRouterDev: false, // 完全使用采用vue-router的开发模式\n        useUniConfig: true, // 是否采用在pages.json下的所有页面配置信息,false时需开发者自行设置页面\n        keepUniIntercept: false, // 保留uni-app使用vue-router的拦截器\n        vueNext: false, // 在next管道函数中是否获取vueRouter next的原本参数\n        replaceStyle: false, // 是否对resetStyle函数中返回的style节点进行全部替换，否则为追加\n        resetStyle: () => JSON.parse('{}'), // 自定义加载样式函数 可返回一个包涵 html、style、script 的对象来重置Router内置的加载动画\n        mode: 'hash',\n        base: '/',\n        linkActiveClass: 'router-link-active',\n        linkExactActiveClass: 'router-link-exact-active',\n        scrollBehavior: (to, from, savedPostion) => savedPostion,\n        fallback: true,\n    },\n    APP: {\n        holdTabbar: true,\t// 是否开启底部菜单拦截\n        loddingPageStyle: () => JSON.parse('{\"backgroundColor\":\"#FFF\"}'),\t// 当前等待页面的样式 必须返回一个json\n        loddingPageHook: (view) => { plus.navigator.closeSplashscreen(); view.show(); },\t\t// 刚刚打开页面处于等待状态,会触发此事件\n        animation: { animationType: 'pop-in', animationDuration: 300 },\t// 页面切换动画\n        switchPageOutTime: 1000,\t// 最高能忍耐的页面切换时间 达到此时间 不管切换有没有完成都会显示页面出来 这对启动页帮助很大\n    },\n    debugger: false, // 是否处于开发阶段 设置为true则打印日志\n    encodeURI: true, // 是否对url传递的参数进行编码\n    routerBeforeEach: () => {}, // router 前置路由函数 每次触发跳转前先会触发此函数\n    routerAfterEach: () => {}, // router 后置路由函数 每次触发跳转后会触发此函数\n    routes: [],\n};\n\nconst uniMethods = { // 缓存下uni-app的跳转 api\n    navigateTo: uni.navigateTo,\n    redirectTo: uni.redirectTo,\n    reLaunch: uni.reLaunch,\n    switchTab: uni.switchTab,\n    navigateBack: uni.navigateBack,\n};\n\nconst methods = {\n    push: 'navigateTo',\n    replace: 'redirectTo',\n    replaceAll: 'reLaunch',\n    pushTab: 'switchTab',\n    back: 'navigateBack',\n};\n\nconst H5FnTypeToggle = {\n    push: 'push',\n    replace: 'replace',\n    replaceAll: 'replace',\n    pushTab: 'replace',\n};\n\nconst lifeCycle = {\n    beforeHooks: [],\n    afterHooks: [],\n    routerHooks: [],\n    routerbeforeHooks: [], // 内部跳转前生命周期\n    routerAfterHooks: [], // 内部跳转后生命周期\n};\n\nconst Global = { // 缓存一些必要的对象，作为全局可以访问的参数\n    $parseQuery: null, // url query 帮助类实例\n    Router: {},\n    vueRouter: {},\n    addedRoutes: [], // 用于缓存用户动态添加的路由\n    RouterReadyPromise: () => {},\n    H5RouterReady: null, // 当前router是否就绪\n    backLayerC: 1,\t// 返回api调用时开发者传递的 delta\n    LockStatus: false, // 当前是否正在进行跳转 正在跳转调用api是不给跳转的\n};\n\nconst uniAppHook = {\n    indexVue: {},\t// 首页 组件对象\n    toutiaoIndexThis: {}, // 头条小程序Index this对象\n    appVue: {},\t// 同getApp()获取到的对象一毛一样的  其实就是app.vue组件\n    onLaunch: {\tfun: [], args: {}, isHijack: false }, // 这两个是app.vue\n    onShow: { fun: [], args: {}, isHijack: false },\n    variationFuns: ['onReady', 'onUnload'],\t// 一些uni-app的变异方法 需要处理下\n    waitHooks: {},\t// 首页等待中的生命钩子 一些需要等待的Hooks,就是在页面没有进来之前一些提前触发的生命钩子 主要是用户已经声明好的\n    indexCallHooks: ['onLoad', 'onReady', 'created', 'onShow'],\t// 在首页首次启动时需要触发的生命周期\n    needHooks: ['onLoad', 'onReady', 'onShow', 'created', 'onHide', 'onUnload', 'onResize'],\t// 首页需要拦截的生命钩子\n    pageReady: false,\n    onLaunched: false,\t// 否触发onLaunch事件\n};\n\nconst route = function (object = {}) {\n    return {\n        ...object,\n        params: {},\n        query: {},\n    };\n};\n\n\n//# sourceURL=webpack:///./src/helpers/config.js?");

/***/ }),

/***/ "./src/helpers/mixins.js":
/*!*******************************!*\
  !*** ./src/helpers/mixins.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"./src/helpers/config.js\");\n/* harmony import */ var _vueRouter_init__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vueRouter/init */ \"./src/vueRouter/init.js\");\n/* harmony import */ var _appRouter_init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../appRouter/init */ \"./src/appRouter/init.js\");\n/* harmony import */ var _appletsRouter_init__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../appletsRouter/init */ \"./src/appletsRouter/init.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util */ \"./src/helpers/util.js\");\n/* harmony import */ var _appRouter_hooks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../appRouter/hooks */ \"./src/appRouter/hooks.js\");\n/* harmony import */ var _appletsRouter_hooks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../appletsRouter/hooks */ \"./src/appletsRouter/hooks.js\");\n\n\n\n\n\n\n\n\n/**\n * 获取一些需要在各个平台混入的事件\n * @param {Object} Router 当前原始路由对象\n */\nconst getMixins = function (Router) {\n    return {\n        H5: {\n            beforeCreate() {\n                if (this.$options.router) {\n                    Object(_vueRouter_init__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Router.$root, this.$options.router, this);\n                }\n            },\n        },\n        APP: {\n            onLaunch() {\n                _config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].onLaunched = true;\t// 标志已经触发了 onLaunch 事件\n                _appRouter_init__WEBPACK_IMPORTED_MODULE_2__[\"appInit\"].call(this, Router.$root);\n            },\n            onLoad() {\n                // 第一个页面 拦截所有生命周期\n                if (_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].onLaunched && !_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].pageReady) {\n                    _config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].onLaunched = false;\n                    _appRouter_hooks__WEBPACK_IMPORTED_MODULE_5__[\"proxyIndexHook\"].call(this, Router.$root);\n                }\n                Object(_appRouter_init__WEBPACK_IMPORTED_MODULE_2__[\"removeBackPressEvent\"])(this.$mp.page, this.$options); // 移除页面的onBackPress事件\n            },\n            onBackPress(...args) {\n                return _appRouter_init__WEBPACK_IMPORTED_MODULE_2__[\"pageIsHeadBack\"].call(Router.$root, this.$mp.page, this.$options, args);\n            },\n        },\n        APPLETS: {\n            onLaunch() {\n                _config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].onLaunched = true;\t// 标志已经触发了 onLaunch 事件\n                _appletsRouter_init__WEBPACK_IMPORTED_MODULE_3__[\"default\"].call(this, Router.$root);\n            },\n            onLoad() {\n                if (_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].onLaunched && !_config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].pageReady) {\t// 必须是第一个页面\n                    _config__WEBPACK_IMPORTED_MODULE_0__[\"uniAppHook\"].onLaunched = false;\n                    _appletsRouter_hooks__WEBPACK_IMPORTED_MODULE_6__[\"appletsProxyIndexHook\"].call(this, Router.$root);\n                }\n            },\n        },\n    };\n};\n\nconst initMixins = function (Vue, Router) {\n    Vue.mixin({\n        ...getMixins(Router)[Object(_util__WEBPACK_IMPORTED_MODULE_4__[\"appPlatform\"])(true)],\n    });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initMixins);\n\n\n//# sourceURL=webpack:///./src/helpers/mixins.js?");

/***/ }),

/***/ "./src/helpers/navJump.js":
/*!********************************!*\
  !*** ./src/helpers/navJump.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./src/helpers/util.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ \"./src/helpers/config.js\");\n/* harmony import */ var _appRouter_hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../appRouter/hooks */ \"./src/appRouter/hooks.js\");\n/* harmony import */ var _appletsRouter_hooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../appletsRouter/hooks */ \"./src/appletsRouter/hooks.js\");\n/* harmony import */ var _appRouter_uniNav__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../appRouter/uniNav */ \"./src/appRouter/uniNav.js\");\n/* harmony import */ var _appletsRouter_appletsNav__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../appletsRouter/appletsNav */ \"./src/appletsRouter/appletsNav.js\");\n/* harmony import */ var _warn__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./warn */ \"./src/helpers/warn.js\");\n/* harmony import */ var _vueRouter_routerNav__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../vueRouter/routerNav */ \"./src/vueRouter/routerNav.js\");\n/* harmony import */ var _compile__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./compile */ \"./src/helpers/compile.js\");\n\n\n\n\n\n\n\n\n\n\n\n/**\n * 返回api 触发的公共函数\n * @param {Object/String} rule  当前跳转规则\n * @param {String} fnType    跳转页面的类型方法\n *\n * this 为当前 Router 实例\n */\nconst isBcakNav = function ({\n    backLayer,\n    delta,\n    H5PATCH,\n}) {\n    _compile__WEBPACK_IMPORTED_MODULE_8__[\"H5\"](() => {\n        H5PATCH.on('historyBack', {\n            backLayer,\n            delta,\n        });\n    });\n    _compile__WEBPACK_IMPORTED_MODULE_8__[\"APP\"](() => {\n        _config__WEBPACK_IMPORTED_MODULE_1__[\"Global\"].backLayerC = backLayer;\t// 告诉路由需要返回几层\n        uni.navigateBack({\n            delta: backLayer,\n            complete: () => {\n                _config__WEBPACK_IMPORTED_MODULE_1__[\"Global\"].LockStatus = false; // 跳转完成解锁状态\n            },\n        });\n    });\n    _compile__WEBPACK_IMPORTED_MODULE_8__[\"mp\"](() => {\n        _appletsRouter_hooks__WEBPACK_IMPORTED_MODULE_3__[\"backCallHook\"].call(this, backLayer, () => {\n            uni.navigateBack({\n                delta: backLayer,\n            });\n        });\n    });\n};\n\n/**\n * 非 返回api 触发的公共函数\n * @param {Object/String} rule  当前跳转规则\n * @param {String} fnType    跳转页面的类型方法\n *\n * this 为当前 Router 实例\n */\n\nconst notBackNav = function (rule, fnType) {\n    if (rule == null) {\n        return Object(_warn__WEBPACK_IMPORTED_MODULE_6__[\"err\"])('跳转规则为空，不允许这样操作');\n    }\n    if (rule.constructor === String) { // 单独 path 的情况   允许？拼接参数\n        const ruleArray = rule.split('?');\n        if (ruleArray.length > 1) {\n            rule = {\n                path: ruleArray[0],\n                query: _config__WEBPACK_IMPORTED_MODULE_1__[\"Global\"].$parseQuery.parse(ruleArray[1]),\n            };\n        }\n    }\n    switch (Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"appPlatform\"])(true)) {\n    case 'H5':\n        return _vueRouter_routerNav__WEBPACK_IMPORTED_MODULE_7__[\"default\"].call(this, _config__WEBPACK_IMPORTED_MODULE_1__[\"H5FnTypeToggle\"][fnType], rule, _config__WEBPACK_IMPORTED_MODULE_1__[\"methods\"][fnType]);\n    case 'APP':\n        _config__WEBPACK_IMPORTED_MODULE_1__[\"Global\"].LockStatus = true; // 设置为锁住状态\n        return _appRouter_hooks__WEBPACK_IMPORTED_MODULE_2__[\"transitionTo\"].call(this, rule, fnType, _appRouter_uniNav__WEBPACK_IMPORTED_MODULE_4__[\"uniPushTo\"]);\n    case 'APPLETS':\n        _config__WEBPACK_IMPORTED_MODULE_1__[\"Global\"].LockStatus = true; // 设置为锁住状态\n        return _appletsRouter_hooks__WEBPACK_IMPORTED_MODULE_3__[\"appletsTransitionTo\"].call(this, rule, fnType, _appletsRouter_appletsNav__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n    default:\n        Object(_warn__WEBPACK_IMPORTED_MODULE_6__[\"err\"])('糟糕！！！还有其他的执行环境？？？没听说过啊。一脸懵逼？？？加QQ群问问：769241495');\n        break;\n    }\n};\n\n/**\n * 处理正在跳转的公共api\n * @param {Object/String} rule  当前跳转规则\n * @param {String} fnType    跳转页面的类型方法\n * @param {Boolean} isBack  是否通过 back() api 调用的 默认为false\n * @param {Boolean} enforce 是否强制越过跳转加锁检查 默认false  目前只有back() api 传递了\n *\n * this 为当前 Router 实例\n */\nconst navjump = function (rule, fnType, isBack = false, enforce = false) {\n    if (_config__WEBPACK_IMPORTED_MODULE_1__[\"Global\"].LockStatus && !enforce) { // 正在跳转的状态下 给出提示正在跳转\n        return Object(_warn__WEBPACK_IMPORTED_MODULE_6__[\"warn\"])('当前页面正在处于跳转状态，请稍后再进行跳转....');\n    }\n    if (isBack) { // 是返回api触发的\n        return isBcakNav.call(this, rule, fnType);\n    }\n    return notBackNav.call(this, rule, fnType);\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (navjump);\n\n\n//# sourceURL=webpack:///./src/helpers/navJump.js?");

/***/ }),

/***/ "./src/helpers/urlQuery.js":
/*!*********************************!*\
  !*** ./src/helpers/urlQuery.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"./src/helpers/config.js\");\n/* harmony import */ var _warn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./warn */ \"./src/helpers/warn.js\");\n\n\n\nconst nodeURL = __webpack_require__(/*! query-string */ \"./node_modules/query-string/index.js\");\n\nclass ParseQuery {\n    get queryName() {\n        return nodeURL;\n    }\n\n    /**\n     * 判断当前这个对象是否为深度对象\n     * @param {Object} obj\n     */\n    isDepthObject(obj) {\n        const str = JSON.stringify(obj);\n        return str.match(/}/g).length > 1;\n    }\n\n    /**\n     * 从URL中提取查询字符串\n     * @param {String} url\n     */\n    extract(url) {\n        return nodeURL.extract(url);\n    }\n\n    /**\n     * 把一个 key=value&key1=value 的字符串转成对象\n     * @param {string} strQuery key=value&key1=value 类型的字符串\n     */\n    parse(strQuery) {\n        return nodeURL.parse(strQuery);\n    }\n\n    /**\n     * 把一个对象转成 key=value&key1=value 类型的字符串\n     * @param {Object} ObjQuery 符合js标注的对象\n     * @param {Boolean} intact 是否在转成的字符串前添加？号\n     */\n    stringify(ObjQuery, intact = true) {\n        const strQuery = nodeURL.stringify(ObjQuery);\n        if (intact) {\n            return `?${strQuery}`;\n        }\n        return strQuery;\n    }\n\n    /**\n     * 把一个对象或者 key=value&key1=value 类型的数据加密成 query=encodeURIComponent(value)\n     * @param {Object|String} query 符合js标注的对象 或者 key=value&key1=value 字符串\n     * @param {Boolean} intact 是否在转成的字符串前添加？号\n     */\n    encode(query, intact = true) {\n        let [strQuery, formatQuery] = ['', ''];\n        if (query == null) {\n            Object(_warn__WEBPACK_IMPORTED_MODULE_1__[\"warn\"])('加密参数没有传递，你知道？', true);\n            return '';\n        }\n        if (query.constructor === String) { // 字符串 尝试 转成 对象\n            strQuery = JSON.stringify(this.parse(query));\n        } else if (query.constructor === Object) { // 直接转成字符串对象即可\n            if (Object.keys(query).length === 0) {\n                Object(_warn__WEBPACK_IMPORTED_MODULE_1__[\"warn\"])('当前参数不满足加密规范！');\n                return '';\n            }\n            strQuery = JSON.stringify(query);\n        }\n        if (intact) {\n            formatQuery = '?';\n        }\n        formatQuery += `query=${encodeURIComponent(strQuery)}`;\n        return formatQuery;\n    }\n\n    /**\n     * 把一个已经加密好的字符串 query=encodeURIComponent(value) 解密成 对象\n     * @param {string} strQuery  已经加密好的字符串 query=encodeURIComponent(value)\n     */\n    decode(strQuery) {\n        if (strQuery == null) {\n            Object(_warn__WEBPACK_IMPORTED_MODULE_1__[\"warn\"])('解密参数没有传递，你知道？', true);\n            return {};\n        }\n        let jsonQuery = strQuery;\n        if (strQuery.constructor === Object) { // 如果是对象 看能不能满足要求\n            jsonQuery = strQuery.query;\n            if (jsonQuery == null) {\n                Object(_warn__WEBPACK_IMPORTED_MODULE_1__[\"warn\"])('当前解密参数不满足编码规则');\n                return {};\n            }\n            jsonQuery = `query=${jsonQuery}`;\n        }\n        let decode = {};\n        // query 长这个样  query=encodeURIComponent(value)\n        const decodeStr = decodeURIComponent(jsonQuery);\n        const { query } = this.parse(decodeStr); // 转成 json 获取到正真的json字符串\n        if (query == null) {\n            Object(_warn__WEBPACK_IMPORTED_MODULE_1__[\"warn\"])('当前解密参数不满足编码规则');\n        } else {\n            try {\n                decode = JSON.parse(query);\n            } catch (error) {\n                Object(_warn__WEBPACK_IMPORTED_MODULE_1__[\"warn\"])('当前解密参数不满足编码规则');\n            }\n        }\n        return decode;\n    }\n\n    queryGet(query) {\n        const { encodeURI } = _config__WEBPACK_IMPORTED_MODULE_0__[\"Global\"].Router.CONFIG; // 获取到路由配置\n        let [decode, historyObj, strQuery] = [query, query, ''];\n        switch (encodeURI) {\n        case true: { // 加密模式\n            decode = this.decode(query);\n            strQuery = this.encode(decode);\n            historyObj = {\n                query: encodeURIComponent(JSON.stringify(decode)),\n            };\n            break;\n        }\n        case false: { // 不加密模式\n            strQuery = this.stringify(query);\n            break;\n        }\n        default: {\n            Object(_warn__WEBPACK_IMPORTED_MODULE_1__[\"err\"])('未知参数模式，请检查 \\'encodeURI\\'', true);\n        }\n        }\n        return { strQuery, historyObj, decode };\n    }\n\n\n    /**\n     * 对需要传递的参数进行加密解密\n     * @param {Object|String} query get为false 必须为 Object 类型\n     * @param {String} get 是取值 还是通过api传值\n     */\n    transfer(query = {}) {\n        const { encodeURI } = _config__WEBPACK_IMPORTED_MODULE_0__[\"Global\"].Router.CONFIG; // 获取到路由配置\n        switch (encodeURI) {\n        case true: {\n            // 加密模式\n            return this.encode(query, false);\n        }\n        case false: {\n            // 不加密模式\n            return this.stringify(query);\n        }\n        default: {\n            Object(_warn__WEBPACK_IMPORTED_MODULE_1__[\"err\"])('未知参数模式，请检查 \\'encodeURI\\' ', true);\n        }\n        }\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ParseQuery);\n\n\n//# sourceURL=webpack:///./src/helpers/urlQuery.js?");

/***/ }),

/***/ "./src/helpers/util.js":
/*!*****************************!*\
  !*** ./src/helpers/util.js ***!
  \*****************************/
/*! exports provided: isH5, isObject, appPlatform, noop, formatConfig, filter, parseQueryN, parseQueryD, parseQuery, exactRule, resolveRule, formatURLQuery, copyObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isH5\", function() { return isH5; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isObject\", function() { return isObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"appPlatform\", function() { return appPlatform; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"noop\", function() { return noop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatConfig\", function() { return formatConfig; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"filter\", function() { return filter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseQueryN\", function() { return parseQueryN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseQueryD\", function() { return parseQueryD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseQuery\", function() { return parseQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"exactRule\", function() { return exactRule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resolveRule\", function() { return resolveRule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatURLQuery\", function() { return formatURLQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"copyObject\", function() { return copyObject; });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"./src/helpers/config.js\");\n/* harmony import */ var _vueRouter_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vueRouter/base */ \"./src/vueRouter/base.js\");\n/* harmony import */ var _warn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./warn */ \"./src/helpers/warn.js\");\n\n\n\n\n/**\n * 当前是不是H5运行环境\n */\nconst isH5 = function () {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n};\n/**\n * 判断当前变量是否为Object\n * @param {Object} strObj\n */\nconst isObject = function (strObj) {\n    return strObj.toString() === '[object Object]' && strObj.constructor === Object;\n};\n/**\n * 获取当前运行平台\n * @param {Boolean} applets 默认false  true时所有小程序平台统一返回 APPLETS\n */\nconst appPlatform = function (applets = false) {\n    let platform = '';\n\n    // #ifdef APP-PLUS-NVUE\n    platform = 'APPNVUE';\n    // #endif\n\n    // #ifdef APP-PLUS\n    platform = 'APP';\n    // #endif\n\n    // #ifdef H5\n    platform = 'H5';\n    // #endif\n\n    // #ifdef MP-ALIPAY\n    platform = 'ALIPAY';\n    // #endif\n\n    // #ifdef MP-BAIDU\n    platform = 'BAIDU';\n    // #endif\n\n    // #ifdef MP-QQ\n    platform = 'QQ';\n    // #endif\n\n    // #ifdef MP-WEIXIN\n    platform = 'WEIXIN';\n    // #endif\n\n    // #ifdef MP-TOUTIAO\n    platform = 'TOUTIAO';\n    // #endif\n\n    if (applets) {\n        // #ifdef MP\n        platform = 'APPLETS';\n        // #endif\n    }\n\n    return platform;\n};\n/**\n * 定义一个空方法 如果最后一个参数为true则打印所有参数\n * @param  {...any} args\n */\nconst noop = function (...args) {\n    if (args[args.length - 1] === true) {\n        Object(_warn__WEBPACK_IMPORTED_MODULE_2__[\"log\"])(args);\n    }\n};\n/**\n * 格式化基础配置信息 通过new Router传递过来的参数\n */\nconst formatConfig = function (userConfig) {\n    if (!userConfig.routes || userConfig.routes.constructor !== Array) {\n        return Object(_warn__WEBPACK_IMPORTED_MODULE_2__[\"err\"])(`路由参数 'routes' 必须传递 \\r\\n\\r\\n${JSON.stringify(userConfig)}`);\n    }\n    if (userConfig.h5 != null && userConfig.h5.constructor !== Object) {\n        return Object(_warn__WEBPACK_IMPORTED_MODULE_2__[\"err\"])(`h5参数传递错误，应该是一个 'Object' 类型 示例：\\r\\n\\r\\n${JSON.stringify(_config__WEBPACK_IMPORTED_MODULE_0__[\"baseConfig\"].h5)}`);\n    }\n    const config = Object.create(null);\n    const baseConfigKeys = Object.keys(_config__WEBPACK_IMPORTED_MODULE_0__[\"baseConfig\"]);\n    for (let i = 0; i < baseConfigKeys.length; i += 1) {\n        const key = baseConfigKeys[i];\n        if (userConfig[key] != null) {\n            if (userConfig[key].constructor === Object) {\n                config[key] = {\n                    ..._config__WEBPACK_IMPORTED_MODULE_0__[\"baseConfig\"][key],\n                    ...userConfig[key],\n                };\n            } else if (key == 'routes') { // 需要加入已知的白名单\n                config[key] = [..._config__WEBPACK_IMPORTED_MODULE_0__[\"baseConfig\"][key], ...userConfig[key], ..._vueRouter_base__WEBPACK_IMPORTED_MODULE_1__[\"builtIn\"]];\n            } else {\n                config[key] = userConfig[key];\n            }\n        } else {\n            config[key] = _config__WEBPACK_IMPORTED_MODULE_0__[\"baseConfig\"][key];\n        }\n    }\n    return config;\n};\nconst filter = function (str) {\n    str += '';\n    str = str.replace(/%/g, '%25');\n    str = str.replace(/\\+/g, '%2B');\n    str = str.replace(/ /g, '%20');\n    str = str.replace(/\\//g, '%2F');\n    str = str.replace(/\\?/g, '%3F');\n    str = str.replace(/&/g, '%26');\n    str = str.replace(/=/g, '%3D');\n    str = str.replace(/#/g, '%23');\n    return str;\n};\n/**\n * 使用encodeURI:true的情况\t需要进行编码后再传递，解码等等 可以传递深度对象并会在路径后面加入一个query=\n *\n * @param {String} routerName //路径名称\n * @param {JSON} query \t//需要格式化参数\n * @param {Boolean} Encode \t//是获取还是编码后传递\n */\nconst parseQueryN = function (routerName, query, Encode) {\n    if (Encode) {\n        return {\n            url: routerName,\n            query: JSON.parse(decodeURIComponent(query.replace(/^query=/, ''))),\n        };\n    }\n    return {\n        url: routerName,\n        query: `query=${encodeURIComponent(JSON.stringify(query))}`,\n    };\n};\n/**\n * 使用encodeURI:false的情况 直接格式化为普通的queryURl参数形式传递即可 扁平深度对象\n *\n * @param {String} routerName //路径名称\n * @param {JSON} query \t//需要格式化参数\n * @param {Boolean} Encode \t//是获取还是编码后传递\n */\nconst parseQueryD = function (routerName, query, Encode) {\n    if (Encode) {\n        const obj = {};\n        const reg = /([^=&\\s]+)[=\\s]*([^&\\s]*)/g;\n        while (reg.exec(query)) {\n            obj[RegExp.$1] = RegExp.$2;\n        }\n        return {\n            url: routerName,\n            query: obj,\n        };\n    }\n    const encodeArr = [];\n    const queryKeys = Object.keys(query);\n    for (let i = 0; i < queryKeys.length; i += 1) {\n        const attr = queryKeys[i];\n        let encodeStr = '';\n        if (query[attr].constructor == Object) {\n            encodeStr = parseQueryD(routerName, query[attr], Encode).query;\n            encodeArr.push(encodeStr);\n        } else {\n            encodeStr = filter(query[attr]);\n            encodeArr.push(`${attr}=${encodeStr}`);\n        }\n    }\n    return {\n        url: routerName,\n        query: encodeArr.join('&'),\n    };\n};\n/**\n * @param {String} routerName //路径名称\n * @param {JSON} query \t//需要格式化参数\n * @param {Boolean} Encode \t//是获取还是编码后传递\n */\nconst parseQuery = function (routerName, query, Encode = false) {\n    if (_config__WEBPACK_IMPORTED_MODULE_0__[\"Global\"].Router.CONFIG.encodeURI) {\n        return parseQueryN(routerName, query, Encode);\n    }\n    return parseQueryD(routerName, query, Encode);\n};\n\nconst exactRule = function (cloneRule, routes, ruleKey, getRule = false) {\n    const params = {};\n    let i = 0;\n    // eslint-disable-next-line\n    while (true) {\r\n        const item = routes[i];\n        if (item == null) {\n            if (!getRule) {\n                Object(_warn__WEBPACK_IMPORTED_MODULE_2__[\"err\"])(`路由表中未查找到 '${ruleKey}' 为 '${cloneRule[ruleKey]}'`);\n            }\n            return {\n                path: '',\n                name: '',\n            };\n        }\n        if (item[ruleKey] != null && item[ruleKey] === cloneRule[ruleKey]) {\n            if (!getRule) {\n                params.url = item.path;\n                params.rule = item;\n                if (isH5()) { // 如果是h5 则使用优先使用自定义路径名称\n                    params.url = item.aliasPath || item.path;\n                }\n                return params;\n            }\n            return item;\n        }\n        i += 1;\n    }\n};\n\nconst resolveRule = function (router, rule, query = {}, ruleKey = 'path') {\n    const ruleInfo = Object(_config__WEBPACK_IMPORTED_MODULE_0__[\"route\"])(\n        exactRule({\n            ...rule,\n        },\n        router.CONFIG.routes,\n        ruleKey,\n        router),\n    );\n    return {\n        ...ruleInfo,\n        query,\n    };\n};\n/**\n * 把一些不必要的参数进行格式化掉，完成url的美观\n * @param {String} URLQuery URL中传递的参数\n */\nconst formatURLQuery = function (URLQuery) {\n    switch (URLQuery.trim()) {\n    case 'query=%7B%7D':\n    case '%7B%7D':\n    case '?query=%7B%7D':\n    case '?':\n    case '?[object Object]':\n    case '?query={}':\n        URLQuery = '';\n        break;\n    default:\n        Object(_warn__WEBPACK_IMPORTED_MODULE_2__[\"warn\"])('url已经很完美啦，不需要格式化！');\n        break;\n    }\n    return URLQuery;\n};\n/**\n * 拷贝对象\n * @param {Object} object\n */\nconst copyObject = function (object) {\n    return JSON.parse(JSON.stringify(object));\n};\n\n\n//# sourceURL=webpack:///./src/helpers/util.js?");

/***/ }),

/***/ "./src/helpers/warn.js":
/*!*****************************!*\
  !*** ./src/helpers/warn.js ***!
  \*****************************/
/*! exports provided: err, warn, log, warnLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"err\", function() { return err; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"warn\", function() { return warn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"log\", function() { return log; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"warnLock\", function() { return warnLock; });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"./src/helpers/config.js\");\n\n\n\nconst isLog = function (type, errText, enforce) {\n    if (!enforce) {\n        const dev = _config__WEBPACK_IMPORTED_MODULE_0__[\"Global\"].Router.CONFIG.debugger;\n        const isObject = dev.toString() === '[object Object]';\n        if (dev === false) {\n            return false;\n        } if (dev === false) {\n            return false;\n        } if (isObject) {\n            if (dev[type] === false) {\n                return false;\n            }\n        }\n    }\n    /* eslint no-console:\"off\" */\n    console[type](errText);\n};\nconst err = function (errInfo, enforce = false) {\n    isLog('error', errInfo, enforce);\n};\n\nconst warn = function (errInfo, enforce = false) {\n    isLog('warn', errInfo, enforce);\n};\n\nconst log = function (errInfo, enforce = false) {\n    isLog('log', errInfo, enforce);\n};\nconst warnLock = function (errInfo) {\n    console.warn(errInfo);\n};\n\n\n//# sourceURL=webpack:///./src/helpers/warn.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: default, RouterMount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterMount\", function() { return RouterMount; });\n/* harmony import */ var _helpers_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers/util */ \"./src/helpers/util.js\");\n/* harmony import */ var _helpers_navJump__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers/navJump */ \"./src/helpers/navJump.js\");\n/* harmony import */ var _vueRouter_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vueRouter/util */ \"./src/vueRouter/util.js\");\n/* harmony import */ var _appRouter_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./appRouter/util */ \"./src/appRouter/util.js\");\n/* harmony import */ var _appRouter_uniNav__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./appRouter/uniNav */ \"./src/appRouter/uniNav.js\");\n/* harmony import */ var _appletsRouter_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./appletsRouter/util */ \"./src/appletsRouter/util.js\");\n/* harmony import */ var _helpers_config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./helpers/config */ \"./src/helpers/config.js\");\n/* harmony import */ var _helpers_warn__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./helpers/warn */ \"./src/helpers/warn.js\");\n/* harmony import */ var _lifeCycle_hooks__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lifeCycle/hooks */ \"./src/lifeCycle/hooks.js\");\n/* harmony import */ var _vueRouter_base__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./vueRouter/base */ \"./src/vueRouter/base.js\");\n/* harmony import */ var _patch_applets_patch__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./patch/applets-patch */ \"./src/patch/applets-patch.js\");\n/* harmony import */ var _patch_app_patch__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./patch/app-patch */ \"./src/patch/app-patch.js\");\n/* harmony import */ var _helpers_mixins__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./helpers/mixins */ \"./src/helpers/mixins.js\");\n/* harmony import */ var _helpers_urlQuery__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./helpers/urlQuery */ \"./src/helpers/urlQuery.js\");\n/* harmony import */ var _patch_h5_patch__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./patch/h5-patch */ \"./src/patch/h5-patch.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// #ifdef H5\n\n// #endif\n\nlet H5PATCH = null;\n// #ifdef H5\nH5PATCH = new _patch_h5_patch__WEBPACK_IMPORTED_MODULE_14__[\"default\"](Object(_helpers_util__WEBPACK_IMPORTED_MODULE_0__[\"isH5\"])());\n// #endif\n\nconst parseQuery = new _helpers_urlQuery__WEBPACK_IMPORTED_MODULE_13__[\"default\"]();\n\n_helpers_config__WEBPACK_IMPORTED_MODULE_6__[\"Global\"].H5RouterReady = new Promise((resolve) => _helpers_config__WEBPACK_IMPORTED_MODULE_6__[\"Global\"].RouterReadyPromise = resolve);\n\nclass Router {\n    constructor(arg) {\n        Router.$root = this;\n        _helpers_config__WEBPACK_IMPORTED_MODULE_6__[\"Global\"].Router = this; // 全局缓存一个对象，不必使用时都传递\n        _helpers_config__WEBPACK_IMPORTED_MODULE_6__[\"Global\"].$parseQuery = parseQuery;\n        this.uniMethods = _helpers_config__WEBPACK_IMPORTED_MODULE_6__[\"uniMethods\"]; // uni-app 原始的 跳转api\n        this.rewritedMethods = {}; // 重写后的 api 集合\n        this.CONFIG = Object(_helpers_util__WEBPACK_IMPORTED_MODULE_0__[\"formatConfig\"])(arg);\n        this.lifeCycle = _helpers_config__WEBPACK_IMPORTED_MODULE_6__[\"lifeCycle\"];\n        _lifeCycle_hooks__WEBPACK_IMPORTED_MODULE_8__[\"registerRouterHooks\"].call(this);\t// 注册全局Router生命钩子\n        if (Object(_helpers_util__WEBPACK_IMPORTED_MODULE_0__[\"appPlatform\"])() === 'H5') {\n            H5PATCH.setLoadingStatus(this.CONFIG.h5);\n        } else if (Object(_helpers_util__WEBPACK_IMPORTED_MODULE_0__[\"appPlatform\"])() === 'APP') { // 仅App才重写\n            _appRouter_uniNav__WEBPACK_IMPORTED_MODULE_4__[\"rewriteUniApi\"].call(this, _helpers_config__WEBPACK_IMPORTED_MODULE_6__[\"uniMethods\"]);\n        }\n    }\n\n    get $Route() {\n        return this.getPageRoute();\n    }\n\n    /**\n     * 获取 url 参数帮助类实例\n     */\n    get $parseQuery() {\n        return _helpers_config__WEBPACK_IMPORTED_MODULE_6__[\"Global\"].$parseQuery;\n    }\n\n    /**\n     * 获取当前是否处于正在跳转的状态\n     * H5 状态下始终为false\n     */\n    get $lockStatus() {\n        return _helpers_config__WEBPACK_IMPORTED_MODULE_6__[\"Global\"].LockStatus;\n    }\n\n    /**\n     * 动态设置拦截状态\n     */\n    set $lockStatus(status) {\n        Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_7__[\"warn\"])('你确定要这么做？你知道后果？', true);\n        _helpers_config__WEBPACK_IMPORTED_MODULE_6__[\"Global\"].LockStatus = status;\n    }\n\n    /** 动态的导航到一个新 URL 保留浏览历史\n\t * navigateTo\n\t * @param {Object} rule\n\t */\n    push(rule) {\n        _helpers_navJump__WEBPACK_IMPORTED_MODULE_1__[\"default\"].call(this, rule, 'push');\n    }\n\n    /** 动态的导航到一个新 URL 关闭当前页面，跳转到的某个页面。\n\t * redirectTo\n\t * @param {Object} rule\n\t */\n    replace(rule) {\n        _helpers_navJump__WEBPACK_IMPORTED_MODULE_1__[\"default\"].call(this, rule, 'replace');\n    }\n\n    /** 动态的导航到一个新 URL 关闭所有页面，打开到应用内的某个页面\n\t * \treLaunch\n\t * @param {Object} rule\n\t */\n    replaceAll(rule) {\n        _helpers_navJump__WEBPACK_IMPORTED_MODULE_1__[\"default\"].call(this, rule, 'replaceAll');\n    }\n\n    /** 动态的导航到一个新 url 关闭所有页面，打开到应用内的某个tab\n\t * @param {Object} rule\n\t */\n    pushTab(rule) {\n        _helpers_navJump__WEBPACK_IMPORTED_MODULE_1__[\"default\"].call(this, rule, 'pushTab');\n    }\n\n    /**\n\t * 返回到指定层级页面上\n     * @param {Number} backLayer 需要返回的页面层级 默认 1\n     * @param {Object} delta 暂时无用\n     * @param {enforce} 是否强制越过跳转加锁检查 默认 false\n\t */\n    back(backLayer = 1, delta, enforce = false) {\n        if (backLayer.constructor != Number) {\n            return Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_7__[\"err\"])(\n                `返回层级参数必须是一个Number类型且必须大于1：${backLayer}`,\n            );\n        }\n        _helpers_navJump__WEBPACK_IMPORTED_MODULE_1__[\"default\"].call(this, {\n            backLayer, delta, H5PATCH,\n        }, 'back', true, enforce);\n    }\n\n    /**\n\t * 获取当前页面下的 Route 信息\n\t *\n\t * @param {Object} Vim 当前开发者可以传递一个 vue 组件对象 来获取当前下的 Route 信息\n\t */\n    getPageRoute(Vim) {\n        const pages = getCurrentPages();\n        switch (Object(_helpers_util__WEBPACK_IMPORTED_MODULE_0__[\"appPlatform\"])(true)) {\n        case 'H5':\n            return _vueRouter_util__WEBPACK_IMPORTED_MODULE_2__[\"H5GetPageRoute\"].call(this, pages, Vim);\n        case 'APP':\n            return Object(_appRouter_util__WEBPACK_IMPORTED_MODULE_3__[\"APPGetPageRoute\"])(pages, Vim);\n        case 'APPLETS':\n            return Object(_appletsRouter_util__WEBPACK_IMPORTED_MODULE_5__[\"AppletsPageRoute\"])(pages, Vim);\n        default:\n            break;\n        }\n    }\n\n    beforeEach(fn) {\n        return Object(_lifeCycle_hooks__WEBPACK_IMPORTED_MODULE_8__[\"registerHook\"])(this.lifeCycle.beforeHooks, fn);\n    }\n\n    afterEach(fn) {\n        return Object(_lifeCycle_hooks__WEBPACK_IMPORTED_MODULE_8__[\"registerHook\"])(this.lifeCycle.afterHooks, fn);\n    }\n}\n\nRouter.install = function (Vue) {\n    Object(_helpers_mixins__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(Vue, Router);\n    Object.defineProperty(Vue.prototype, '$Router', {\n        get() {\n            return Router.$root;\n        },\n    });\n    Object.defineProperty(Vue.prototype, '$Route', {\n        get() {\n            return Router.$root.getPageRoute(this);\n        },\n    });\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Router);\n/**\n *\n * @param {VueComponent } Vim vue实例对象\n * @param {dom} el\tdom节点选择器\n */\nconst RouterMount = function (Vim, el) {\n    switch (Object(_helpers_util__WEBPACK_IMPORTED_MODULE_0__[\"appPlatform\"])(true)) {\n    case 'APP':\n        Object(_patch_app_patch__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(Vim, el);\n        break;\n    case 'APPLETS':\n        Object(_patch_applets_patch__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(Vim, el);\n        break;\n    case 'H5':\n        _vueRouter_base__WEBPACK_IMPORTED_MODULE_9__[\"vueMount\"].push({ Vim, el });\n        break;\n    default:\n        Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_7__[\"warn\"])('糟糕！！！还有其他的执行环境？？？没听说过啊。一脸懵逼？？？加QQ群问问：769241495');\n        break;\n    }\n};\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/lifeCycle/hooks.js":
/*!********************************!*\
  !*** ./src/lifeCycle/hooks.js ***!
  \********************************/
/*! exports provided: registerHook, registerRouterHooks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"registerHook\", function() { return registerHook; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"registerRouterHooks\", function() { return registerRouterHooks; });\n/* harmony import */ var _helpers_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/util */ \"./src/helpers/util.js\");\n/* harmony import */ var _patch_h5_patch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../patch/h5-patch */ \"./src/patch/h5-patch.js\");\n\n\n// #ifdef H5\n\n\nconst H5PATCH = new _patch_h5_patch__WEBPACK_IMPORTED_MODULE_1__[\"default\"](Object(_helpers_util__WEBPACK_IMPORTED_MODULE_0__[\"isH5\"])());\n// #endif\n\nconst registerHook = function (list, fn) {\n    list.push(fn);\n    return () => {\n        const i = list.indexOf(fn);\n        if (i > -1) list.splice(i, 1);\n    };\n};\n/**\n * 注册全局Router生命钩子\n */\nconst registerRouterHooks = function () {\n    registerHook(this.lifeCycle.routerbeforeHooks, function () {\n        return new Promise(async (resolve) => {\n            this.CONFIG.routerBeforeEach(); // 触发暴露给开发者的生命钩子\n            if (Object(_helpers_util__WEBPACK_IMPORTED_MODULE_0__[\"appPlatform\"])(true) === 'H5') {\n                H5PATCH.on('toogle', 'startLodding');\n            }\n            return resolve(true);\n        });\n    });\n    registerHook(this.lifeCycle.routerAfterHooks, function (res = {}) {\n        if (res.H5Intercept !== true) {\n            this.CONFIG.routerAfterEach(); // 触发暴露给开发者的生命钩子\n        }\n        if (Object(_helpers_util__WEBPACK_IMPORTED_MODULE_0__[\"appPlatform\"])(true) === 'H5') {\n            H5PATCH.on('toogle', 'stopLodding');\n        }\n        return true;\n    });\n};\n\n\n//# sourceURL=webpack:///./src/lifeCycle/hooks.js?");

/***/ }),

/***/ "./src/patch/app-patch.js":
/*!********************************!*\
  !*** ./src/patch/app-patch.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\n * 截止 1.3.5 版本 不做任何操作\n * @param {element} el dom节点\n */\nconst appMount = function (Vim) {\n    Vim.$mount();\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (appMount);\n\n\n//# sourceURL=webpack:///./src/patch/app-patch.js?");

/***/ }),

/***/ "./src/patch/applets-patch.js":
/*!************************************!*\
  !*** ./src/patch/applets-patch.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n/**\n * 截止 1.3.5 版本 不做任何操作\n * @param {element} el dom节点\n */\nconst appletsMount = function (Vim) {\n    Vim.$mount();\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (appletsMount);\n\n\n//# sourceURL=webpack:///./src/patch/applets-patch.js?");

/***/ }),

/***/ "./src/patch/h5-patch.js":
/*!*******************************!*\
  !*** ./src/patch/h5-patch.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _component_h5_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/h5-dom */ \"./src/component/h5-dom.js\");\n/* harmony import */ var _vueRouter_init__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vueRouter/init */ \"./src/vueRouter/init.js\");\n/* harmony import */ var _helpers_warn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/warn */ \"./src/helpers/warn.js\");\n// #ifdef H5\n\n\n// #endif\n\n\n\nclass Patch {\n    constructor(H5) {\n        this.H5 = H5;\n        this.isLoading = true;\n        this.loadingCount = 0; // 在APP.vue中进行跳转时，DOMContentLoaded过慢。使用索引来判断\n    }\n\n    on(fun, args, callback) {\n        if (this.H5) {\n            return this[fun](args);\n        }\n        if (callback) {\n            callback();\n        }\n    }\n\n    /**\n\t *把vueRouter的生命周期代理过来\n\t * @param {Object} Router\n\t * @param {Object} vueRouter\n\t * @param {VueComponent} vueVim\n\t */\n    // eslint-disable-next-line\n    registerHook(Router, vueRouter, vueVim) {\r\n        Object(_vueRouter_init__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Router, vueRouter, vueVim);\n    }\n\n    /**\n\t * H5 专属 history.back API\n\t * @param {Number} backLayer\t需要返回的层级必须是正整数\n\t * 2020年1月14日14:39:38  修复 https://github.com/SilurianYang/uni-simple-router/issues/73\n\t */\n    // eslint-disable-next-line\n    historyBack({ backLayer, delta = { from: 'navigateBack' } } = {}) {\r\n        const pages = getCurrentPages();\n        const page = pages[pages.length - 1];\n        const { onBackPress } = page.$options;\n        if (onBackPress != null && onBackPress.constructor === Array) {\n            const callFun = onBackPress[onBackPress.length - 1];\n            const isNext = callFun.call(page, delta);\n            if (isNext) {\n                return true;\n            }\n        }\n        // eslint-disable-next-line\n        history.go(-backLayer);\r\n    }\n\n    /**\n\t * 把加载动画添加到dom下面,为什么一定要先添加，后移除。保证动画的连续性\n\t */\n    appendHTML({\n        style,\n        html,\n        script,\n    }) {\n        window.addEventListener('DOMContentLoaded', () => {\n            const body = document.querySelector('body');\n            body.appendChild(style);\n            body.appendChild(html);\n            body.appendChild(script);\n            this.toogle('startLodding', true);\n        });\n    }\n\n    /**\n\t * 页面是否加载完毕触发对应事件\n\t */\n    toogle(toogle, DOMContentLoaded = false) {\n        if (DOMContentLoaded && this.loadingCount !== 0) {\n            this.loadingCount += 1;\n            return false;\n        }\n        try {\n            this.loadingCount += 1;\n            if (this.isLoading) {\n                window[toogle]();\n            }\n        } catch (error) {\n            Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_2__[\"warn\"])('你使用了 addRoutes API 提前进行了生命周期 并触发了startLodding');\n        }\n    }\n\n    async setLoadingStatus({\n        loading,\n        replaceStyle,\n        resetStyle,\n    }) {\n        this.isLoading = loading;\n        if (loading) {\t\t// 确认需要加载样式 开始插入节点\n            const userStyle = resetStyle();\n            const userStyleKeys = Object.keys(userStyle);\n            for (let i = 0; i < userStyleKeys.length; i += 1) {\n                const key = userStyleKeys[i];\n                let html = userStyle[key];\n                if (key === 'style' && !replaceStyle) {\t// 开发者设置为追加style\n                    html = _component_h5_dom__WEBPACK_IMPORTED_MODULE_0__[\"DOM\"][key].innerHTML + html;\n                }\n                _component_h5_dom__WEBPACK_IMPORTED_MODULE_0__[\"DOM\"][key].innerHTML = html;\n            }\n            this.appendHTML(_component_h5_dom__WEBPACK_IMPORTED_MODULE_0__[\"DOM\"]);\n        }\n    }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Patch);\n\n\n//# sourceURL=webpack:///./src/patch/h5-patch.js?");

/***/ }),

/***/ "./src/vueRouter/base.js":
/*!*******************************!*\
  !*** ./src/vueRouter/base.js ***!
  \*******************************/
/*! exports provided: builtIn, vuelifeHooks, vueMount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"builtIn\", function() { return builtIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"vuelifeHooks\", function() { return vuelifeHooks; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"vueMount\", function() { return vueMount; });\nconst builtIn = [{\n    path: '/preview-image',\n    name: 'previewImage',\n    component: {\n        render: () => {},\n    },\n}, {\n    path: '/choose-location',\n    name: 'chooseLocation',\n    component: {\n        render: () => {},\n    },\n}, {\n    path: '/open-location',\n    name: 'openLocation',\n    component: {\n        render: () => {},\n    },\n}]; // uni-app内置路由\nconst vuelifeHooks = { // vueRouter的原始生命周期\n    beforeHooks: [],\n    afterHooks: [],\n};\nconst vueMount = [];// 使用内部对象保留实例化下的appVue,并使用Router进行挂载触发第一次路由钩子\n\n\n//# sourceURL=webpack:///./src/vueRouter/base.js?");

/***/ }),

/***/ "./src/vueRouter/concat.js":
/*!*********************************!*\
  !*** ./src/vueRouter/concat.js ***!
  \*********************************/
/*! exports provided: appMount, forMatNext, beforeEnterHooks, afterHooks, beforeHooks, triggerLifeCycle, registerRouter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"appMount\", function() { return appMount; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"forMatNext\", function() { return forMatNext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"beforeEnterHooks\", function() { return beforeEnterHooks; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"afterHooks\", function() { return afterHooks; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"beforeHooks\", function() { return beforeHooks; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"triggerLifeCycle\", function() { return triggerLifeCycle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"registerRouter\", function() { return registerRouter; });\n/* harmony import */ var _helpers_warn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/warn */ \"./src/helpers/warn.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ \"./src/vueRouter/util.js\");\n/* harmony import */ var _helpers_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/util */ \"./src/helpers/util.js\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base */ \"./src/vueRouter/base.js\");\n/* harmony import */ var _helpers_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/config */ \"./src/helpers/config.js\");\n\n\n\n\n\n\nlet beforeEachCount = 0;\nlet afterEachCount = 0;\nlet resolveLaunch = null;\nlet beforeEnterDep = [];// 记录当前是否有重复的页面进入 避免重复触发\nconst beforeEachLaunch = new Promise((resolve) => resolveLaunch = resolve);\n\n/**\n * 把vue实例进行挂载到dom下\n * @param {Router} Router uni-simple-router实例对象\n */\nconst appMount = function () {\n    if (_base__WEBPACK_IMPORTED_MODULE_3__[\"vueMount\"].length == 0) {\n        return Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_0__[\"err\"])('检测到您未进行dom模型挂载操作，请调用api\\r\\n\\r\\n RouterMount(Vim: any, el: any): void');\n    }\n    const {\n        Vim,\n        el,\n    } = _base__WEBPACK_IMPORTED_MODULE_3__[\"vueMount\"][0];\n    let formatEl = el;\n    if (el == null) {\n        formatEl = '#app'; // 这是uni-app在h5中的官方节点\n    }\n    try {\n        Vim.$mount(formatEl);\n    } catch (error) {\n        Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_0__[\"warn\"])(`挂载vue节点时错误啦${error}`);\n    }\n};\n\n/**\n * 格式化 next传递过来的参数 作为vue-router可用的\n * @param {Object} to//即将跳转到的路由页面\n * @param {*} Intercept\n * @param {Funtion} next//路由连接管道\n * @param {Router} Router//路由对象\n */\nconst forMatNext = function (to, Intercept, next, Router) {\n    const { CONFIG, selfRoutes } = Router;\n    if (CONFIG.h5.vueRouterDev) { // 完全使用vue-router开发的时候 vueRouterDev:true 不用做啥直接略过\n        next(Intercept);\n        return Intercept;\n    }\n    if (typeof Intercept === 'object') { // 只有是对象类型的时候 我们才进行格式化\n        const navType = Reflect.get(Intercept, 'NAVTYPE');\n        delete Intercept.NAVTYPE;\n        if (navType == 'push') {\n            Intercept.replace = false;\n            Intercept.type = 'navigateTo';\n        } else {\n            Intercept.replace = true; // uni-app导航api所谓的NAVTYPE取值在h5都是replace:true\n            Intercept.type = 'reLaunch';\n        }\n        const name = Reflect.get(Intercept, 'name'); // 统一格式化path\n        Intercept.query = Intercept.params || Intercept.query;\n        delete Intercept.name;\n        delete Intercept.params;\n        if (Intercept.query == null) {\n            Intercept.query = {};\n        }\n        if (name != null) {\n            const { aliasPath, path } = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"nameToRute\"])(name, selfRoutes);\n            Intercept.path = aliasPath || path;\n        } else { // 当设置别名时可以是别名跳转也可以path跳转\n            Intercept.path = Reflect.get(Intercept, 'path');\n            const rute = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"formatUserRule\"])(Intercept.path, selfRoutes, CONFIG);\n            if (rute == null) {\n                return false;\n            }\n            Intercept.path = rute;\n        }\n        if (CONFIG.encodeURI) { // 如果设置的编码传递则进行编码后传递\n            const query = encodeURIComponent(JSON.stringify(Intercept.query));\n            const formatQuery = Object(_helpers_util__WEBPACK_IMPORTED_MODULE_2__[\"formatURLQuery\"])(query);\n            Intercept.query = {};\n            if (formatQuery != '') {\n                Intercept.query.query = formatQuery;\n            }\n        }\n    } else if (Intercept != null && Intercept.constructor === String) {\n        Intercept = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"formatUserRule\"])(Intercept, selfRoutes, CONFIG);\n    }\n    let objPath = Intercept;\n    if (Intercept != null && Intercept.constructor !== Boolean) {\n        objPath = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"strPathToObjPath\"])(Intercept);\n        if (objPath != null) {\n            const type = Reflect.get(objPath, 'type');\n            if (type == null) { // 当next()是一个路径时\n                objPath.type = 'navigateTo';\n            }\n        }\n    } else if (Intercept === false) {\n        Router.lifeCycle.routerAfterHooks[0].call(Router, { H5Intercept: true });\n    }\n    next(objPath);// 统一格式化为对象的方式传递\n    return Intercept;\n};\n/**\n *  v1.5.4+\n * beforeRouteLeave 生命周期\n * @param {Object} to       将要去的那个页面 vue-router to对象\n * @param {Object} from     从那个页面触发的 vue-router from对象\n * @param {Object} next      vue-router beforeEach next管道函数\n * @param {Object} Router   Router路由对象\n */\nconst beforeRouteLeaveHooks = function (to, from, next, Router) {\n    return new Promise((resolve) => {\n        const { currentRoute } = Router.$route;\n        if (currentRoute.path == to.path) { // 如果是同一个页面直接返回  不执行页面中的Leave事件\n            return resolve();\n        }\n        const page = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getPages\"])(); // 获取到当前的页面对象\n        if (page == null || page._HHYANGbeforeRouteLeaveCalled) {\n            Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_0__[\"warn\"])('当前环境下无须执行 beforeRouteLeave。 原因：1.page等于null  2.真的的无须执行');\n            return resolve();\n        }\n        const beforeRouteLeaveArray = page.$options.beforeRouteLeave; // 获取到页面下的 beforeRouteLeave 路由守卫\n        if (beforeRouteLeaveArray == null) { // 当前页面没有预设 beforeRouteLeave 啥都不做\n            return resolve();\n        }\n        const { toRoute, fromRoute } = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getRouterNextInfo\"])(to, from, Router);\n        const beforeRouteLeave = beforeRouteLeaveArray[0]; // 不管怎么样 只执行第一个钩子  其他都不管\n        beforeRouteLeave.call(page, toRoute, fromRoute, (Intercept) => { // 开始执行生命周期\n            if (Intercept == null) { // 放行状态  直接返回\n                return resolve();\n            }\n            page._HHYANGbeforeRouteLeaveCalled = true; // 标记一下当前已经做过 beforeRouteLeave 啦\n            forMatNext(to, Intercept, next, Router); // 直接交给vue-router 处理\n        });\n    });\n};\n\n/**\n * 修复首页beforeEnter执行两次的问题 https://github.com/SilurianYang/uni-simple-router/issues/67\n *\n * beforeEnter 生命周期\n * @param {Object} to\n * @param {Object} from\n * @param {Object} next\n * @param {Object} userHooks\n * @param {Object} Router\n */\nconst beforeEnterHooks = function (to, from, next, userHooks, Router) {\n    return new Promise(async (resolve) => {\n        // 修复 (#67)\n        if (beforeEnterDep.includes(to.path)) {\n            next();\n            return resolve();\n        }\n        beforeEnterDep = [to.path];\n\n        if (Reflect.get(Router, 'H5RouterReady')) {\n            const res = await new Promise(async (resolveNext) => {\n                const {\n                    toRoute,\n                    fromRoute,\n                } = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getRouterNextInfo\"])(to, from, Router);\n                await userHooks(toRoute, fromRoute, resolveNext);\n            });\n            forMatNext(to, res, next, Router);\n        } else {\n            next();\n        }\n        resolve();\n    });\n};\n/**\n * vueAfter 生命周期\n * @param {Object} to\n * @param {Object} from\n * @param {Object} next\n * @param {Object} Router\n */\nconst afterHooks = async function (to, from, next, Router) {\n    _base__WEBPACK_IMPORTED_MODULE_3__[\"vuelifeHooks\"].afterHooks[0](to, from);\n    if (_helpers_config__WEBPACK_IMPORTED_MODULE_4__[\"lifeCycle\"].afterHooks[0]) {\n        if (afterEachCount === 0) {\n            await beforeEachLaunch;\n            appMount(Router);\n        }\n        const {\n            toRoute,\n            fromRoute,\n        } = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getRouterNextInfo\"])(to, from, Router);\n        _helpers_config__WEBPACK_IMPORTED_MODULE_4__[\"lifeCycle\"].afterHooks[0](toRoute, fromRoute);\n    } else if (afterEachCount === 0) {\n        appMount(Router);\n    }\n    afterEachCount += 1;\n    Router.lifeCycle.routerAfterHooks[0].call(Router);\n};\n/**\n * vueBefore 生命周期\n * @param {Object} to       将要去的那个页面 vue-router to对象\n * @param {Object} from     从那个页面触发的 vue-router from对象\n * @param {Object} next      vue-router beforeEach next管道函数\n * @param {Object} H5Config\n */\nconst beforeHooks = function (to, from, next, Router) {\n    return new Promise(async (resolve) => {\n        await Router.lifeCycle.routerbeforeHooks[0].call(Router); // 触发Router内置前置生命周期\n        await beforeRouteLeaveHooks(to, from, next, Router); // 执行1.5.4+ beforeRouteLeave生命钩子\n        const H5 = Router.CONFIG.h5;\n        _base__WEBPACK_IMPORTED_MODULE_3__[\"vuelifeHooks\"].beforeHooks[0](to, from, async (Intercept) => {\n            if (Intercept != null && H5.keepUniIntercept === true && H5.vueRouterDev === false) {\n                next(Intercept);\n                Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_0__[\"warn\"])('uni-app 内部强制触发跳转拦截');\n                beforeEachCount += 1;\n                return resolve();\n            }\n            // 顺序问题 没有触发uni-app里面的方法 修复[#44](https://github.com/SilurianYang/uni-simple-router/issues/44)\n            if (!_helpers_config__WEBPACK_IMPORTED_MODULE_4__[\"lifeCycle\"].beforeHooks[0]) {\n                next();\n                beforeEachCount += 1;\n                resolveLaunch();\n                return resolve();\n            }\n            const res = await new Promise(async (resolveNext) => {\n                const {\n                    toRoute,\n                    fromRoute,\n                } = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getRouterNextInfo\"])(to, from, Router);\n                await _helpers_config__WEBPACK_IMPORTED_MODULE_4__[\"lifeCycle\"].beforeHooks[0](toRoute, fromRoute, resolveNext);\n            });\n            const beforeIntercept = forMatNext(to, res, next, Router);\n            if (beforeEachCount == 0 && beforeIntercept == null && to.meta.isTabBar) { // 首次触发beforeEach，并且首页没有进行跳转的情况下才触发beforeEnter 主要是keep-alive\n                const {\n                    selfRoutes,\n                } = Router;\n                const beforeEnter = Reflect.get(selfRoutes[`/${to.meta.pagePath}`], 'beforeEnter');\n                if (beforeEnter) {\n                    await beforeEnterHooks(to, from, next, beforeEnter, Router);\n                }\n            }\n            beforeEachCount += 1;\n            resolveLaunch();\n            resolve();\n        });\n    });\n};\n/**\n * 通过自动调用router api来完成触发生命周期\n * 修复 history 模式下报错的问题  https://github.com/SilurianYang/uni-simple-router/issues/38\n * 修复 history 模式下刷新页面参数丢失的问题 https://github.com/SilurianYang/uni-simple-router/issues/45\n * 修复 history 模式下首次打开页面url错误时不走 path:* 的匹配项  https://github.com/SilurianYang/uni-simple-router/issues/58\n *\n * @param {Object} Router //当前simple-router 对象\n * @param {Object} vueRouter vue-router对象\n */\nconst triggerLifeCycle = function (Router, vueRouter) {\n    const { CONFIG } = Router;\n    const currRoute = vueRouter.currentRoute;\n    if (vueRouter.mode === 'hash') {\n        const {\n            query,\n            path,\n        } = currRoute;\n\n        const URLQuery = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"encodeURLQuery\"])(CONFIG, query, 'hash');\n\n        vueRouter.replace(`${path}${URLQuery}`);\n    } else {\n        const {\n            toRoute,\n        } = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getRouterNextInfo\"])(currRoute, currRoute, Router);\n        const URLQuery = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"encodeURLQuery\"])(CONFIG, currRoute.query, 'history');\n        vueRouter.replace({\n            path: toRoute.aliasPath || toRoute.path || currRoute.path,\n            query: URLQuery,\n            type: 'redirectTo',\n        });\n    }\n};\n\n/** 注册自定义的路由到vue-router中 前提是必须使用vueRouter开发模式\n * @param {Object} Router\n * @param {Object} vueRouter\n * @param {Boolean} vueRouterDev\n */\nconst registerRouter = function (Router, vueRouter, vueRouterDev) {\n    let routeMap = [];\n    if (!vueRouterDev) { // 则进行对比两个路由表  主要工作是做路径的优化\n        routeMap = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"diffRouter\"])(Router, vueRouter, Router.CONFIG.h5.useUniConfig);\n    } else { // 完全使用vue-router开发时直接采用开发者的路由表\n        routeMap = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"vueDevRouteProxy\"])(Router.CONFIG.routes, Router);\n    }\n    const createRouter = () => new vueRouter.constructor({\n        base: vueRouter.options.base,\n        mode: vueRouter.options.mode,\n        routes: routeMap,\n    });\n    const router = createRouter();\n    vueRouter.matcher = router.matcher;\n    _helpers_config__WEBPACK_IMPORTED_MODULE_4__[\"Global\"].vueRouter = vueRouter; // 把当前vueRouter缓存到全局对象中\n    _helpers_config__WEBPACK_IMPORTED_MODULE_4__[\"Global\"].RouterReadyPromise(); // router已经准备就绪 调用promise.resolve();\n    Router.H5RouterReady = true; // 并挂载到Router对象下\n    // 注册完成所有的钩子及相关参数，手动触发Router的生命周期\n    setTimeout(() => {\n        triggerLifeCycle(Router, vueRouter);\n    });\n};\n\n\n//# sourceURL=webpack:///./src/vueRouter/concat.js?");

/***/ }),

/***/ "./src/vueRouter/extends/myArray.js":
/*!******************************************!*\
  !*** ./src/vueRouter/extends/myArray.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\n * 实现一个继承的 数组类  代理掉 vue-router 生命钩子的数据\n */\nclass MyArray extends Array {\n    constructor(Router, vueOldHooks, hookFun) {\n        super();\n        this.Router = Router;\n        this.vueOldHooks = vueOldHooks;\n        this.hookFun = hookFun;\n    }\n\n    push(v) {\n        this.vueOldHooks.splice(0, 1, v);// 把vue-router路由生命钩子保存起来\n        this[this.length] = (to, from, next) => {\n            this.hookFun(to, from, next, this.Router);\n        };\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (MyArray);\n\n\n//# sourceURL=webpack:///./src/vueRouter/extends/myArray.js?");

/***/ }),

/***/ "./src/vueRouter/init.js":
/*!*******************************!*\
  !*** ./src/vueRouter/init.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./concat */ \"./src/vueRouter/concat.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ \"./src/vueRouter/util.js\");\n/* harmony import */ var _helpers_warn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/warn */ \"./src/helpers/warn.js\");\n/* harmony import */ var _proxy_proxy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./proxy/proxy */ \"./src/vueRouter/proxy/proxy.js\");\n\n\n\n\n/**\n * 重写掉H5端 uni-app原始存在的bug\n *\n * @param {Object} Router\n */\nconst rewriteUniFun = function (Router) {\n    if (Router.CONFIG.h5.rewriteFun === false) { // 不需要重写\n        return false;\n    }\n    uni.reLaunch = function ({\n        url,\n    }) {\n        if (url === '/') {\n            Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_2__[\"warn\"])('H5端 uni.reLaunch(\\'/\\')时 默认被重写了! 你可以使用 this.$Router.replaceAll() 或者 uni.reLaunch(\\'/\\'?xxx)');\n            // eslint-disable-next-line\n            if (history.length > 1) { // 只有在有历史记录的时候才返回  不然直接返回首页\r\n                return Router.back();\n            }\n            return Router.replaceAll('/');\n        }\n        const path = url.match(/^[^?]+|(\\/)/)[0];\n        try {\n            const query = {};\n            url.replace(/([^?&]+)=([^?&]+)/g, (s, v, k) => {\n                query[v] = decodeURIComponent(k);\n                return `${k}=${v}`;\n            });\n            Router.replaceAll({\n                path,\n                query,\n            });\n        } catch (e) {\n            Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_2__[\"err\"])(`${url}解析失败了....  试试 this.$Router.replaceAll() 吧`);\n        }\n    };\n    uni.navigateBack = function (delta) {\n        let backLayer = delta;\n        if (delta.constructor === Object) { // 这种可能就只是uni-app自带的返回按钮,还有种可能就是开发者另类传递的\n            backLayer = 1;\n        }\n        Router.back(backLayer, delta);\n    };\n};\n/**\n * 拦截并注册vueRouter中的生命钩子，路由表解析\n * @param {Object} Router\n * @param {vueRouter} vueRouter\n */\nconst init = function (Router, vueRouter) {\n    const CONFIG = Router.CONFIG.h5;\n    vueRouter.afterHooks = Object(_proxy_proxy__WEBPACK_IMPORTED_MODULE_3__[\"proxyEachHooks\"])(Router, 'afterHooks', _concat__WEBPACK_IMPORTED_MODULE_0__[\"afterHooks\"]);\n    vueRouter.beforeHooks = Object(_proxy_proxy__WEBPACK_IMPORTED_MODULE_3__[\"proxyEachHooks\"])(Router, 'beforeHooks', _concat__WEBPACK_IMPORTED_MODULE_0__[\"beforeHooks\"]);\n    const objVueRoutes = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"fromatRoutes\"])(vueRouter.options.routes, false, {}); // 返回一个格式化好的routes 键值对的形式\n    const objSelfRoutes = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"fromatRoutes\"])(Router.CONFIG.routes, true, CONFIG);\n    Router.vueRoutes = objVueRoutes; // 挂载vue-routes到当前的路由下\n    Router.selfRoutes = {\n        ...Router.selfRoutes || {},\n        ...objSelfRoutes,\n    }; // 挂载self-routes到当前路由下\n    Router.$route = vueRouter; // 挂载vue-router到$route\n    rewriteUniFun(Router); // 重新掉uniapp上的一些有异常的方法\n    Object(_concat__WEBPACK_IMPORTED_MODULE_0__[\"registerRouter\"])(Router, vueRouter, CONFIG.vueRouterDev);\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (init);\n\n\n//# sourceURL=webpack:///./src/vueRouter/init.js?");

/***/ }),

/***/ "./src/vueRouter/proxy/proxy.js":
/*!**************************************!*\
  !*** ./src/vueRouter/proxy/proxy.js ***!
  \**************************************/
/*! exports provided: proxyBeforeEnter, proxyEachHooks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"proxyBeforeEnter\", function() { return proxyBeforeEnter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"proxyEachHooks\", function() { return proxyEachHooks; });\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../concat */ \"./src/vueRouter/concat.js\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base */ \"./src/vueRouter/base.js\");\n/* harmony import */ var _extends_myArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../extends/myArray */ \"./src/vueRouter/extends/myArray.js\");\n\n\n\n\n/**\n * 通过 Object.defineProperty 代理一个对象主要是拦截beforeEnter 生命钩子\n * @param {Router} Router  路由实例对象\n * @param {Object} BeProxy 需要代理的路由表\n */\nconst proxyBeforeEnter = function (Router, BeProxy) {\n    const proxyDc = Object.create(null);// 创建没有继承的属性\n    const BeProxyKeys = Object.keys(BeProxy);\n    for (let i = 0; i < BeProxyKeys.length; i += 1) {\n        const key = BeProxyKeys[i];\n        Object.defineProperty(proxyDc, key, {\n            enumerable: true,\n            configurable: true,\n            get() {\n                const value = BeProxy[key];\n                if (key == 'beforeEnter' && value !== undefined) {\n                    return (to, from, next) => {\n                        Object(_concat__WEBPACK_IMPORTED_MODULE_0__[\"beforeEnterHooks\"])(to, from, next, value, Router);\n                    };\n                }\n                return value;\n            },\n            set(v) {\n                BeProxy[key] = v;\n            },\n        });\n    }\n    return proxyDc;\n};\n\n/**\n * 在uni-app没有注入生命周期时先直接代理相关生命周期数组\n * @param {Object} Router\n * @param {Object} key\n * @param {Funtion} hookFun\n */\nconst proxyEachHooks = function (Router, key, hookFun) {\n    const vueOldHooks = _base__WEBPACK_IMPORTED_MODULE_1__[\"vuelifeHooks\"][key];\n    return new _extends_myArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"](Router, vueOldHooks, hookFun);\n};\n\n\n//# sourceURL=webpack:///./src/vueRouter/proxy/proxy.js?");

/***/ }),

/***/ "./src/vueRouter/routerNav.js":
/*!************************************!*\
  !*** ./src/vueRouter/routerNav.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _helpers_warn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/warn */ \"./src/helpers/warn.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ \"./src/vueRouter/util.js\");\n\n\n\n/**\n * @param {Object} replace vue-router的跳转方式\n * @param {Object} rule 需要跳转到的路由匹配规则\n * @param {Object} type 对应的官方跳转模式\n *\n * this 为当前 Router 实例\n */\nconst H5PushTo = function (replace, rule, type) {\n    if (this.$route == null) {\n        return Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_0__[\"err\"])('h5端路由为就绪，请检查调用代码');\n    }\n    rule = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"formatUserRule\"])(rule, this.selfRoutes, this.CONFIG);\n    const objPath = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"strPathToObjPath\"])(rule);\n    objPath.type = type;\n    this.$route[replace](objPath);\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (H5PushTo);\n\n\n//# sourceURL=webpack:///./src/vueRouter/routerNav.js?");

/***/ }),

/***/ "./src/vueRouter/util.js":
/*!*******************************!*\
  !*** ./src/vueRouter/util.js ***!
  \*******************************/
/*! exports provided: resolveRender, resloveChildrenPath, fromatRoutes, getFuntionConfig, pathToRute, nameToRute, formatUserRule, getRouterNextInfo, vueDevRouteProxy, encodeURLQuery, strPathToObjPath, getPages, H5GetPageRoute, diffRouter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resolveRender\", function() { return resolveRender; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resloveChildrenPath\", function() { return resloveChildrenPath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromatRoutes\", function() { return fromatRoutes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFuntionConfig\", function() { return getFuntionConfig; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pathToRute\", function() { return pathToRute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"nameToRute\", function() { return nameToRute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatUserRule\", function() { return formatUserRule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getRouterNextInfo\", function() { return getRouterNextInfo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"vueDevRouteProxy\", function() { return vueDevRouteProxy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeURLQuery\", function() { return encodeURLQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"strPathToObjPath\", function() { return strPathToObjPath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPages\", function() { return getPages; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"H5GetPageRoute\", function() { return H5GetPageRoute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"diffRouter\", function() { return diffRouter; });\n/* harmony import */ var _helpers_warn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/warn */ \"./src/helpers/warn.js\");\n/* harmony import */ var _helpers_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/util */ \"./src/helpers/util.js\");\n/* harmony import */ var _proxy_proxy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./proxy/proxy */ \"./src/vueRouter/proxy/proxy.js\");\n/* harmony import */ var _helpers_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/config */ \"./src/helpers/config.js\");\n\n\n\n\n\nconst pagesConfigReg = /props:\\s*\\(.*\\)\\s*(\\([\\s\\S]*\\))\\s*},/;\nconst pagesConfigRegCli = /props:\\s*Object\\.assign\\s*(\\([\\s\\S]*\\))\\s*},/; // 脚手架项目\nconst defRoutersReg = /props:\\s*{([\\s\\S]+)}\\s*},/;\n\n/**\n * 解析验证当前的 component 选项是否配置正确 只有vueRouterDev:false 才会调用此方法\n * @param {Function|Object} component\n * @param {Object} item\n * @param {Boolean} useUniConfig\n */\nconst resolveRender = function ({\n    component,\n    components,\n}, item, useUniConfig) {\n    if (components != null) {\n        Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_0__[\"warn\"])(`vueRouterDev:false时 路由表配置中 ‘components’ 无效，\\r\\n\\r\\n ${JSON.stringify(item)}`);\n    }\n    if (useUniConfig == true) { // 采用uni-pages.json中的配置时component可以为空\n        return false;\n    }\n    if (item.path == '*') { // 唯独这个情况在vue-router中可以不用component\n        return true;\n    }\n    if (component == null) {\n        return Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_0__[\"err\"])(`vueRouterDev:false时 路由表中 ‘component’ 选项不能为空：\\r\\n\\r\\n ${JSON.stringify(item)}`);\n    }\n    if (component.constructor === Function) {\n        item.component = {\n            render: component,\n        };\n    } else if (component.constructor === Object) {\n        if (component.render == null || component.render.constructor !== Function) {\n            Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_0__[\"err\"])(`vueRouterDev:false时 路由表配置中 ‘render’ 函数缺失或类型不正确：\\r\\n\\r\\n ${JSON.stringify(item)}`);\n        }\n    } else {\n        Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_0__[\"err\"])(\n            `vueRouterDev:false时 路由表配置中 ‘component’ 选项仅支持 Function、Object 类型。并确保 Object 类型时传递了 ‘render’ 函数  ：\\r\\n\\r\\n ${JSON.stringify(item)}`,\n        );\n    }\n};\n/**\n * 递归解析 H5配置中有存在嵌套对象的情况,优先以path为key存储。没有则找aliasPath作为key\n * @param {Object} objRoutes\n * @param {Array} children\n * @param {Boolean} useUniConfig 是否使用pages.json下的页面配置\n */\nconst resloveChildrenPath = function (objRoutes, children, useUniConfig) {\n    for (let i = 0; i < children.length; i += 1) {\n        const item = children[i];\n        resolveRender(item, item, useUniConfig);\n        if (item.path != null) {\n            objRoutes[item.path] = {\n                ...item,\n                ...{\n                    _ROUTERPATH: true, // 使用page.json中的path为路径\n                },\n            };\n        } else {\n            objRoutes[item.aliasPath] = {\n                ...item,\n                ...{\n                    _ROUTERPATH: false,\n                },\n            };\n        }\n        if (item.children && item.children.constructor === Array) {\n            resloveChildrenPath(objRoutes, item.children, useUniConfig);\n        }\n    }\n};\n/**\n * 格式化原始路由表\n * @param {Object} routes  路由表\n * @param {Boolean} userRoute  是否为用户自己配置的路由表\n * @param {Boolean} H5CONFIG\n */\nconst fromatRoutes = function (routes, userRoute, {\n    vueRouterDev,\n    useUniConfig,\n}) {\n    if (userRoute && vueRouterDev) { // 如果是用户的路由表并且 完全采用vueRouter开发 则不作处理直接返回\n        return routes;\n    }\n    const objRoutes = {};\n    for (let i = 0; i < routes.length; i += 1) {\n        const item = routes[i];\n        const path = item.path === '/' ? item.alias : item.path;\n        if (userRoute) {\n            if (item.children && item.children.constructor === Array) {\n                resloveChildrenPath(objRoutes, item.children, useUniConfig);\n            }\n            resolveRender(item, item, useUniConfig); // 是否使用pages.json下的页面配置\n        }\n        objRoutes[path] = {\n            ...item,\n            ...{\n                _PAGEPATH: path.substring(1),\n            },\n        };\n    }\n    return objRoutes;\n};\n\n/**\n * 解析vueRouter中 component 下 render函数中的配置信息\n * @param {String} FunStr\n */\nconst getFuntionConfig = function (FunStr) {\n    let matchText = FunStr.match(pagesConfigReg);\n    let prefix = '';\n    if (matchText == null) { // 是uni-app自带的默认路由及配置 也可能是脚手架项目\n        matchText = FunStr.match(pagesConfigRegCli);\n        if (matchText == null) { // 确认不是脚手架项目\n            try {\n                // eslint-disable-next-line\n                matchText = FunStr.match(defRoutersReg)[1];\r\n                // eslint-disable-next-line\n                matchText = eval(`Object.assign({${matchText}})`);\r\n                prefix = 'system-';\n            } catch (error) {\n                Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_0__[\"err\"])(`读取uni-app页面构建方法配置错误 \\r\\n\\r\\n ${error}`);\n            }\n        } else {\n            // eslint-disable-next-line\n            matchText = eval(`Object.assign${matchText[1]}`);\r\n        }\n    } else {\n        // eslint-disable-next-line\n        matchText = eval(`Object.assign${matchText[1]}`);\r\n    }\n    return {\n        config: matchText,\n        prefix,\n        FunStr,\n    };\n};\n/**\n * 通过一个未知的路径名称 在路由表中查找指定路由表 并返回\n * @param {String} path //不管是aliasPath名的路径还是path名的路径\n * @param {Object} routes//当前对象的所有路由表\n */\nconst pathToRute = function (path, routes) {\n    let PATHKEY = '';\n    let rute = {};\n    const routeKeys = Object.keys(routes);\n    for (let i = 0; i < routeKeys.length; i += 1) {\n        const key = routeKeys[i];\n        const item = routes[key];\n        rute = item;\n        if (item.aliasPath == path) { // path参数是优先采用aliasPath为值得 所以可以先判断是否与aliasPath相同\n            PATHKEY = 'aliasPath';\n            break;\n        }\n        // eslint-disable-next-line\n        if (`/${item._PAGEPATH}` == path) { // 路径相同\r\n            PATHKEY = 'path';\n            break;\n        }\n    }\n    return {\n        PATHKEY: {\n            [PATHKEY]: path,\n        },\n        rute,\n    };\n};\n/**\n * 通过一个路径name 在路由表中查找指定路由表 并返回\n * @param {String} name//实例化路由时传递的路径表中所匹配的对应路由name\n * @param {Object} routes//当前对象的所有路由表\n */\nconst nameToRute = function (name, routes) {\n    const routesKeys = Object.keys(routes);\n    for (let i = 0; i < routesKeys.length; i += 1) {\n        const key = routesKeys[i];\n        const item = routes[key];\n        if (item.name == name) {\n            return item;\n        }\n    }\n\n    Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_0__[\"err\"])(`路由表中没有找到 name为:'${name}' 的路由`);\n};\n/**\n * 根据用户传入的路由规则 格式化成正确的路由规则\n * @param {Object} rule 用户需要跳转的路由规则\n * @param {Object} selfRoutes simple-router下的所有routes对象\n * @param {Object} CONFIG 当前路由下的所有配置信息\n */\nconst formatUserRule = function (rule, selfRoutes, CONFIG) {\n    let type = '';\n    const ruleQuery = (type = 'query', rule.query || (type = 'params', rule.params)) || (type = '', {});\n    let rute = {}; // 默认在router中的配置\n    if (type == '' && rule.name != null) { // 那就是可能没有穿任何值咯\n        type = 'params';\n    }\n    if (type != 'params') {\n        const route = pathToRute(rule.path || rule, selfRoutes);\n        if (Object.keys(route.PATHKEY)[0] == '') {\n            Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_0__[\"err\"])(`'${route.PATHKEY['']}' 路径在路由表中未找到`);\n            return null;\n        }\n        rute = route.rute;\n        if (rule.path) {\n            rule.path = rute.path;\n        }\n    }\n    if (type != '') { // 当然是对象啦 这个主要是首页H5PushTo调用时的\n        if (type == 'params' && CONFIG.h5.paramsToQuery) { // 如果是name规则并且设置了转query,那么就转path跳转了\n            const {\n                aliasPath,\n                path,\n            } = nameToRute(rule.name, selfRoutes);\n            delete rule.name;\n            delete rule.params;\n            rule.path = aliasPath || path;\n            type = 'query';\n        }\n        const query = _helpers_config__WEBPACK_IMPORTED_MODULE_3__[\"Global\"].$parseQuery.transfer(ruleQuery);\n        if (CONFIG.encodeURI) {\n            if (query != '') {\n                rule[type] = {\n                    query: query.replace(/^query=/, ''),\n                };\n            }\n        } else {\n            rule[type] = ruleQuery;\n        }\n    } else { // 纯字符串,那就只有是path啦\n        rule = rute.path;\n    }\n    return rule;\n};\n\n/**\n * 根据是否获取非vue-Router next管道参数，来进行格式化\n *\n * @param {Object} to\n * @param {Object} from\n * @param {Router} Router  //router当前实例对象\n */\nconst getRouterNextInfo = function (to, from, Router) {\n    let [toRoute, fromRoute] = [to, from];\n    const H5 = Router.CONFIG.h5;\n    if (H5.vueNext === false && H5.vueRouterDev === false) { // 不采用vue-router中的to和from,需要格式化成Router中$Route获取的一样一样的\n        let [toPath, fromPath] = [{}, {}];\n        toPath[to.meta.PATHKEY] = to.meta.PATHKEY === 'path' ? `/${to.meta.pagePath}` : `${to.path}`;\n        fromPath[from.meta.PATHKEY] = from.meta.PATHKEY === 'path' ? `/${from.meta.pagePath}` : `${from.path}`;\n\n        if (to.meta.PATHKEY == null) { // 未使用uni-pages.json中的配置、通过addRoutes时 meta.PATHKEY 可能未undefined\n            toPath = pathToRute(to.path, Router.selfRoutes).PATHKEY;\n        }\n        if (from.meta.PATHKEY == null) {\n            fromPath = pathToRute(from.path, Router.selfRoutes).PATHKEY;\n        }\n\n        const isEmptyTo = Object.keys(to.query).length != 0 ? Object(_helpers_util__WEBPACK_IMPORTED_MODULE_1__[\"copyObject\"])(to.query) : Object(_helpers_util__WEBPACK_IMPORTED_MODULE_1__[\"copyObject\"])(to.params);\n        const isEmptyFrom = Object.keys(from.query).length != 0 ? Object(_helpers_util__WEBPACK_IMPORTED_MODULE_1__[\"copyObject\"])(from.query) : Object(_helpers_util__WEBPACK_IMPORTED_MODULE_1__[\"copyObject\"])(from.params);\n        /* eslint-disable */\r\n        delete isEmptyTo.__id__; // 删除uni-app下的内置属性\r\n        delete isEmptyFrom.__id__;\r\n        /* eslint-enable */\n        const toQuery = _helpers_config__WEBPACK_IMPORTED_MODULE_3__[\"Global\"].$parseQuery.queryGet(isEmptyTo).decode;\n        const fromQuery = _helpers_config__WEBPACK_IMPORTED_MODULE_3__[\"Global\"].$parseQuery.queryGet(isEmptyFrom).decode;\n        toRoute = Object(_helpers_util__WEBPACK_IMPORTED_MODULE_1__[\"resolveRule\"])(Router, toPath, toQuery, Object.keys(toPath)[0]);\n        fromRoute = Object(_helpers_util__WEBPACK_IMPORTED_MODULE_1__[\"resolveRule\"])(Router, fromPath, fromQuery, Object.keys(fromPath)[0]);\n    } else {\n        if (fromRoute.name == null && toRoute.name != null) { // 这种情况是因为uni-app在使用vue-router时搞了骚操作。\n            fromRoute = {\n                ...fromRoute,\n                ...{\n                    name: toRoute.name,\n                },\n            }; // 这个情况一般出现在首次加载页面\n        }\n    }\n    return {\n        toRoute,\n        fromRoute,\n    };\n};\nconst vueDevRouteProxy = function (routes, Router) {\n    const proxyRoutes = [];\n    for (let i = 0; i < routes.length; i += 1) {\n        const item = routes[i];\n        const childrenRoutes = Reflect.get(item, 'children');\n        if (childrenRoutes != null) {\n            const childrenProxy = vueDevRouteProxy(childrenRoutes, Router);\n            item.children = childrenProxy;\n        }\n        const ProxyRoute = Object(_proxy_proxy__WEBPACK_IMPORTED_MODULE_2__[\"proxyBeforeEnter\"])(Router, item);\n        proxyRoutes.push(ProxyRoute);\n    }\n    return proxyRoutes;\n};\n/**\n * 组装成编码后的路由query传递信息\n * @param {Object} CONFIG simple-router 对象配置\n * @param {Object} query 传递的参数\n * @param {Object} mode 路由模式\n */\n\nconst encodeURLQuery = function (CONFIG, query, mode) {\n    if (Object.keys(query).length == 0) { // 没有传值的时候 我们啥都不管\n        return '';\n    }\n    if (CONFIG.h5.vueRouterDev === false) { // 没有采取完全模式开发时 才转换\n        const { strQuery, historyObj } = _helpers_config__WEBPACK_IMPORTED_MODULE_3__[\"Global\"].$parseQuery.queryGet(query);\n        if (mode === 'history') {\n            return historyObj;\n        }\n        return strQuery;\n    } // 完全彩种 vue-router 开发的时候 我们不用管\n    if (mode === 'history') { // 此模式下 需要的就是对象\n        return query;\n    }\n    return _helpers_config__WEBPACK_IMPORTED_MODULE_3__[\"Global\"].$parseQuery.stringify(query); // hash转成字符串拼接\n};\n/**\n * 把一个未知的路由跳转规则进行格式化为 hash、history 可用的,主要表现在 history模式下直接传入path会报错__id__错误的问题\n * @param {*} path 需要判断修改的路径规则\n */\nconst strPathToObjPath = function (path) {\n    if (path == null) { // 我们也不用管啦,这个情况是路由守卫中传递的\n        return path;\n    }\n    if (Object(_helpers_util__WEBPACK_IMPORTED_MODULE_1__[\"isObject\"])(path)) { // 是对象我们不用管\n        return path;\n    }\n    return { // 这种情况就是只有path时,直接返回path对象了\n        path,\n    };\n};\n/**\n * 通过 getCurrentPages() api 获取指定页面的 page 对象 默认是获取当前页面page对象\n * @param {Number} index //需要获取的页面索引\n * @param {Boolean} all //是否获取全部的页面\n */\nconst getPages = function (index = 0, all) {\n    const pages = getCurrentPages(all);\n    return pages.reverse()[index];\n};\n/**\n * 获取当前页面下的 Route 信息\n *\n * @param {Object} pages 获取页面对象集合\n * @param {Object} Vim 用户传递的当前页面对象\n */\nconst H5GetPageRoute = function (pages, Vim) {\n    if (pages.length > 0) { // 直接取当前页面的对象\n        const currentRoute = pages[pages.length - 1].$route;\n        return getRouterNextInfo(currentRoute, currentRoute, this).toRoute;\n    } if (Vim && Vim.$route) {\n        return getRouterNextInfo(Vim.$route, Vim.$route, this).toRoute;\n    }\n    return {};\n};\n\n/**\n * 在useUniConfig:true 的情况下重新拼装路由表 useUniConfig:false 不需要读取page.json中的数据 直接使用component作为页面组件\n * @param {Router} Router//unis-simple-router 路由对象\n * @param {vueRouter} vueRouter//vue-router对象\n * @param {Boolean} useUniConfig//是否采用uni-page.json中的配置选项\n * @param {Array} routes//需要循环的routes表\n */\nconst diffRouter = function (Router, vueRouter, useUniConfig, routes) {\n    const newRouterMap = [];\n    if (useUniConfig) { // 使用pages.json的样式配置 只是单纯的把url路径改成用户自定义的 保留uni的所以的配置及生命周期、缓存\n        const Routes = routes || vueRouter.options.routes;\n        const cloneSelfRoutes = Object(_helpers_util__WEBPACK_IMPORTED_MODULE_1__[\"copyObject\"])(Router.selfRoutes); // copy一个对象随便搞xxoo\n        Routes.forEach(((item) => {\n            const path = item.path === '/' ? item.alias : item.path;\n            const vueRoute = (Router.vueRoutes[path] || Router.vueRoutes[item.path]) || Router.selfRoutes[path];\n            const CselfRoute = Router.selfRoutes[path];\n            delete cloneSelfRoutes[path]; // 移除已经添加到容器中的路由，用于最后做对比 是否page.json中没有，而实例化时传递了\n            if (CselfRoute == null) {\n                return Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_0__[\"err\"])(\n                    `读取 ‘pages.json’ 中页面配置错误。实例化时传递的路由表中未找到路径为：${path} \\r\\n\\r\\n 可以尝试把 ‘useUniConfig’ 设置为 ‘false’。或者配置正确的路径。如果你是动态添加的则不用理会`,\n                );\n            }\n            let pageConfigJson = {\n                config: {},\n            };\n            if (vueRoute.component) {\n                pageConfigJson = getFuntionConfig(vueRoute.component.render.toString());\n                CselfRoute.component = {\n                    render: (h) => vueRoute.component.render(h),\n                };\n            }\n            delete CselfRoute.components; // useUniConfig:true 时不允许携带components\n            delete CselfRoute.children; // useUniConfig:true 时不允许携带children\n            CselfRoute.meta = {\n                ...pageConfigJson.config,\n                ...item.meta || {},\n                PATHKEY: CselfRoute.aliasPath ? 'aliasPath' : 'path',\n                pagePath: CselfRoute.path.substring(1),\n            };\n            CselfRoute.path = CselfRoute.aliasPath || (item.path === '/' ? item.path : CselfRoute.path);\n            item.alias = item.path === '/' ? item.alias : CselfRoute.path; // 重新给vueRouter赋值一个新的路径，欺骗uni-app源码判断\n            const ProxyRoute = Object(_proxy_proxy__WEBPACK_IMPORTED_MODULE_2__[\"proxyBeforeEnter\"])(Router, CselfRoute);\n            newRouterMap.push(ProxyRoute);\n        }));\n        if (Object.keys(cloneSelfRoutes).length > 0) { // 确实page.json中没有，而实例化时传递了\n            const testG = cloneSelfRoutes['*']; // 全局通配符,他是个例外'通配符'可以被添加\n            if (testG && routes == null) {\n                const ProxyRoute = Object(_proxy_proxy__WEBPACK_IMPORTED_MODULE_2__[\"proxyBeforeEnter\"])(Router, Router.selfRoutes['*']);\n                newRouterMap.push(ProxyRoute);\n            }\n            if (routes == null) { // 非动态添加时才打印警告\n                const cloneSelfRoutesKeys = Object.keys(cloneSelfRoutes);\n                for (let i = 0; i < cloneSelfRoutesKeys.length; i += 1) {\n                    const key = cloneSelfRoutesKeys[i];\n                    if (key !== '*') { // 通配符不警告\n                        Object(_helpers_warn__WEBPACK_IMPORTED_MODULE_0__[\"warn\"])(`实例化时传递的routes参数：\\r\\n\\r\\n ${JSON.stringify(cloneSelfRoutes[key])} \\r\\n\\r\\n 在pages.json中未找到。自定排除掉，不会添加到路由中`);\n                    }\n                }\n            }\n        }\n    } else { // 不使用任何的uni配置完全使用 完全使用component作为页面使用\n        const Routes = routes || Router.selfRoutes;\n        const RoutesKeys = Object.keys(Routes);\n        for (let i = 0; i < RoutesKeys.length; i += 1) {\n            const key = RoutesKeys[i];\n            const item = Routes[key];\n            // eslint-disable-next-line\n            if (item._ROUTERPATH != null) { // 不寻找children下的路径，只取第一层\r\n                continue;\n            }\n            delete item.components;\n            delete item.children;\n            item.path = item.aliasPath || item.path; // 优先获取别名为路径\n            if (item.path !== '*') {\n                item.component = item.component.render || item.component; // render可能是用户使用addRoutes api进行动态添加的\n            }\n            item.meta = {\n                ...item.meta || {},\n                PATHKEY: item.aliasPath ? 'aliasPath' : 'path',\n                pagePath: item.path.substring(1),\n            };\n            const ProxyRoute = Object(_proxy_proxy__WEBPACK_IMPORTED_MODULE_2__[\"proxyBeforeEnter\"])(Router, item);\n            newRouterMap.push(ProxyRoute);\n        }\n    }\n    return newRouterMap;\n};\n\n\n//# sourceURL=webpack:///./src/vueRouter/util.js?");

/***/ })

/******/ });